@model AdvantShop.Web.Admin.Models.Catalog.ExportFeeds.ExportFeedSettingsAvitoModel

@{
    var isMobile = SettingsDesign.IsMobileTemplate;
}

<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.Currency, T("Admin.ExportFeeed.SettingsAvito.Currency"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.DropDownList("ddlCurrency", new SelectList(Model.Currencies, "Key", "Value", Model.Currency), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.Currency='" + Model.Currency + "'", ng_model = "exportFeeds.AdvancedSettings.Currency" })

    </div>
</div>


@if (Model.PriceRulesEnabled && Model.PriceRules.Count > 0)
{
    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3 col-wl-2">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.PriceRuleId, T("Admin.ExportFeed.SettingsYandex.PriceRule"), new { @class = "required" })
            </div>
        </div>
        <div class="col-xs-12 col-md-5 col-wl-4  @(isMobile ? "flex middle-xs" : "")">
            @Html.DropDownList("ddlPriceRuleId",
                new SelectList(Model.PriceRulesList, "Value", "Text", Model.PriceRuleId),
                new { @class = "form-control input-alt-mobile", ng_init = "exportFeeds.AdvancedSettings.PriceRuleId='" + Model.PriceRuleId + "'", ng_model = "exportFeeds.AdvancedSettings.PriceRuleId" })
            @if (isMobile)
            {
                <help-trigger class="ng-cloak m-l-sm p-l-sm" data-title="@T("Admin.ExportFeed.SettingsYandex.PriceRule")" style="height:50%;">
                    <div class="help-content">
                        @T("Admin.ExportFeed.SettingsYandex.PriceRule.Help")
                    </div>
                </help-trigger>
            }
        </div>
        @if (!isMobile)
        {
            <help-trigger class="ng-cloak p-l-sm" data-title="@T("Admin.ExportFeed.SettingsYandex.PriceRule")" style="height:50%;">
                <div class="help-content">
                    @T("Admin.ExportFeed.SettingsYandex.PriceRule.Help")
                </div>
            </help-trigger>
        }
    </div>
}


<div class="form-group row middle-xs setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-12 col-md-3 col-wl-2">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ExportNotAvailable, T("Admin.ExportFeeed.SettingsAvito.ExportNotAvailable"))
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label" data-e2e="CsvCategorySort">
            @Html.CheckBoxFor(x => x.ExportNotAvailable, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.ExportNotAvailable=" + Model.ExportNotAvailable.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.ExportNotAvailable" })
            <span class="adv-checkbox-emul"></span>
        </label>
        @if (isMobile)
        {
            @Html.LabelFor(x => x.ExportNotAvailable, T("Admin.ExportFeeed.SettingsAvito.ExportNotAvailable"), new { @class = "setting__label m-l-sm flex-grow" })
        }
    </div>
</div>


<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.PublicationDateOffset, T("Admin.ExportFeed.SettingsAvito.PublicationDateOffset"))
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative">
        @Html.TextBoxFor(x => x.PublicationDateOffset, new { @class = "form-control input-alt", required = "required", @type = "number", ng_model = "exportFeeds.AdvancedSettings.PublicationDateOffset", validation_input_text = T("Admin.ExportFeeed.SettingsAvito.PublicationDateOffset"), ng_pattern = "/^[0-9]*$/" })
        @*<help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs" data-title="@T("Admin.ExportFeed.Settings.AdditionalUrlTags")">
                <div class="help-content">
                    @T("Admin.ExportFeed.Settings.AvailableVariables")
                    #STORE_NAME#, #STORE_URL#, #PRODUCT_NAME#, #PRODUCT_ID#, #PRODUCT_ARTNO#, #OFFER_ID#
                </div>
            </help-trigger>*@
    </div>
</div>
<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.DurationOfPublicationInDays, T("Admin.ExportFeed.SettingsAvito.DurationOfPublicationInDays"))
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative">
        @Html.TextBoxFor(x => x.DurationOfPublicationInDays, new { @class = "form-control input-alt", required = "required", @type = "number", ng_model = "exportFeeds.AdvancedSettings.DurationOfPublicationInDays", validation_input_text = T("Admin.ExportFeeed.SettingsAvito.DurationOfPublicationInDays"), ng_pattern = "/^[0-9]*$/" })
        @*<help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs" data-title="@T("Admin.ExportFeed.Settings.AdditionalUrlTags")">
                <div class="help-content">
                    @T("Admin.ExportFeed.Settings.AvailableVariables")
                    #STORE_NAME#, #STORE_URL#, #PRODUCT_NAME#, #PRODUCT_ID#, #PRODUCT_ARTNO#, #OFFER_ID#
                </div>
            </help-trigger>*@
    </div>
</div>
<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.PaidPublicationOption, T("Admin.ExportFeed.SettingsAvito.PaidPublicationOption"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        @Html.DropDownList("ddlPaidPublicationOption", new SelectList(Model.ListPaidPublicationOption, "Key", "Value", Model.PaidPublicationOption), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.PaidPublicationOption='" + Model.PaidPublicationOption + "'", ng_model = "exportFeeds.AdvancedSettings.PaidPublicationOption" })
        <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="Тег ListingFee">
            <div class="help-content">
                Вариант платного размещения — одно из значений списка:
                <ul>
                    <li>«Package» — размещение объявления осуществляется только при наличии подходящего пакета размещения;</li>
                    <li>«PackageSingle» — при наличии подходящего пакета оплата размещения объявления произойдет с него; если нет подходящего пакета, но достаточно денег на кошельке Avito, то произойдет разовое размещение;</li>
                    <li>«Single» — только разовое размещение, произойдет при наличии достаточной суммы на кошельке Avito; если есть подходящий пакет размещения, он будет проигнорирован.</li>
                </ul>
                Если элемент пуст или отсутствует, то значение по умолчанию — «Package».
            </div>
        </help-trigger>
    </div>

</div>
<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.PaidServices, T("Admin.ExportFeed.SettingsAvito.PaidServices"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        @Html.DropDownList("ddlPaidServices", new SelectList(Model.ListPaidServices, "Key", "Value", Model.PaidServices), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.PaidServices='" + Model.PaidServices + "'", ng_model = "exportFeeds.AdvancedSettings.PaidServices" })
        <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="Тег AdStatus">
            <div class="help-content">
                Платная услуга, которую нужно применить к объявлению — одно из значений списка:
                <ul>
                    <li>«Free» — обычное объявление;</li>
                    <li>«Premium» — премиум-объявление;</li>
                    <li>«VIP» — VIP-объявление;</li>
                    <li>«PushUp» — поднятие объявления в поиске;</li>
                    <li>«Highlight» — выделение объявления;</li>
                    <li>«TurboSale»— применение пакета «Турбо-продажа»;</li>
                    <li>«QuickSale» — применение пакета «Быстрая продажа».</li>
                </ul>
                <p>
                    Если элемент пуст или отсутствует, то статус объявления по умолчанию — «Free».
                </p>
                <p>
                    Для успешного применения платной услуги необходимо наличие денег на Кошельке Avito. Если денег на Кошельке недостаточно для применения услуги, объявление выгружается как обычное (Free).
                    <br />
                    Одна платная услуга применяется к одному объявлению не чаще, чем один раз в определенный период времени:
                    <br />
                    для услуг «Premium», «VIP», «Highlight» — раз в 7 дней,
                    <br />
                    для «PushUp» — раз в 2 дня,
                    <br />
                    пакеты услуг «QuickSale», «TurboSale» — раз в 7 дней.
                    <br />
                    Если по истечении указанного времени статус объявления в XML все еще отличается от «Free», то услуга будет применена повторно.
                </p>
                <p>
                    Разные услуги для одного объявления активируются независимо друг от друга: одна услуга может быть активирована, пока еще не закончился срок действия другой. За один цикл автозагрузки можно применить только одну услугу.
                </p>
            </div>
        </help-trigger>
    </div>

</div>
<div class="form-group row middle-xs setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-12 col-md-3 col-wl-2 ">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.EmailMessages, T("Admin.ExportFeed.SettingsAvito.EmailMessages"), new { @class = "required" })
            </div>
        </div>
    }
<div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
    <label class="adv-checkbox-label">
        @Html.CheckBoxFor(x => x.EmailMessages, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.EmailMessages=" + Model.EmailMessages.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.EmailMessages" })
        <span class="adv-checkbox-emul"></span>
    </label>
    @if (isMobile)
    {
        @Html.LabelFor(x => x.EmailMessages, T("Admin.ExportFeed.SettingsAvito.EmailMessages"), new { @class = "required setting__label m-l-sm flex-grow" })
    }
    <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="Тег AllowEmail">
        <div class="help-content">
            Возможность написать сообщение по объявлению через сайт — одно из значений списка:
            <ul>
                <li>«Да»,</li>
                <li>«Нет».</li>
            </ul>
            Примечание: значение по умолчанию — «Да».
        </div>
    </help-trigger>
</div>
</div>

<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.ManagerName, T("Admin.ExportFeed.SettingsAvito.ManagerName"))
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        @Html.TextBoxFor(x => x.ManagerName, new { @class = "form-control input-alt", required = "required", @maxlength = "40", ng_model = "exportFeeds.AdvancedSettings.ManagerName", validation_input_text = T("Admin.ExportFeed.SettingsAvito.ManagerName") })
        <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="Тег ManagerName">
            <div class="help-content">
                <p>Имя менеджера, контактного лица компании по данному объявлению — строка не более 40 символов.</p>
            </div>
        </help-trigger>
    </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.Phone, T("Admin.ExportFeed.SettingsAvito.Phone"))
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control input-alt", required = "required", ng_model = "exportFeeds.AdvancedSettings.Phone", validation_input_text = T("Admin.ExportFeeed.SettingsAvito.Phone"), mask_control = "", mask_control_preset = "phone" })
        <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="Тег ContactPhone">
            <div class="help-content">
                <p>Контактный телефон — строка, содержащая только один российский номер телефона; должен быть обязательно указан код города или мобильного оператора. Корректные примеры:</p>
                <ul>
                    <li>«+7 (495) 777-10-66»</li>
                    <li>«(81374) 4-55-75»</li>
                    <li>«8 905 207 04 90»</li>
                    <li>«+7 905 2070490»</li>
                    <li>«88123855085»</li>
                    <li>«9052070490»</li>
                </ul>
            </div>
        </help-trigger>
    </div>
</div>
<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.Address, T("Admin.ExportFeed.SettingsAvito.Address"))
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        @Html.TextBoxFor(x => x.Address, new { @class = "form-control input-alt", required = "required", ng_model = "exportFeeds.AdvancedSettings.Address", validation_input_text = T("Admin.ExportFeed.SettingsAvito.Address"), @maxlength = "250" })
        <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="Тег Address">
            <div class="help-content">
                <p>Пример: Россия, Тамбовская область, Моршанск, Лесная улица, 7</p>
            </div>
        </help-trigger>
    </div>
</div>


<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.ProductDescriptionType, T("Admin.ExportFeeed.SettingsAvito.ProductDescriptionType"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.DropDownList("ddlProductDescriptionType", new SelectList(Model.ProductDescriptionTypeList, "Key", "Value", Model.ProductDescriptionType), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.ProductDescriptionType = '" + Model.ProductDescriptionType + "'", ng_model = "exportFeeds.AdvancedSettings.ProductDescriptionType" })
    </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    @if(!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap">
                @Html.LabelFor(x => x.UnloadProperties, T("Admin.ExportFeed.SettingsAvito.UnloadProperties"))
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.UnloadProperties, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.UnloadProperties=" + Model.UnloadProperties.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.UnloadProperties" })
            <span class="adv-checkbox-emul"></span>
        </label>
         @if (isMobile)
         { 
         @Html.LabelFor(x => x.UnloadProperties, T("Admin.ExportFeed.SettingsAvito.UnloadProperties"), new { @class = "setting__label m-l-sm flex-grow" })
         }
    </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.Address, T("Admin.ExportFeed.SettingsAvito.DefaultAvitoCategory"))
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative">
        @Html.TextBoxFor(x => x.DefaultAvitoCategory, new { @class = "form-control input-alt", required = "required", ng_model = "exportFeeds.AdvancedSettings.DefaultAvitoCategory", validation_input_text = T("Admin.ExportFeed.SettingsAvito.DefaultAvitoCategory") })
        @*<help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs" data-title="Тег Address">
                <div class="help-content">
                    <p>Пример: Товары для компьютера</p>
                </div>
            </help-trigger>*@
    </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.IsActiveAboveAdditionalDescription, T("Admin.ExportFeed.SettingsAvito.AboveAdditionalDescription"))
            </div>
        </div>
    }

    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.IsActiveAboveAdditionalDescription, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.IsActiveAboveAdditionalDescription=" + Model.IsActiveAboveAdditionalDescription.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.IsActiveAboveAdditionalDescription" })
            <span class="adv-checkbox-emul"></span>
        </label>
        @if (isMobile)
        {
            @Html.LabelFor(x => x.IsActiveAboveAdditionalDescription, T("Admin.ExportFeed.SettingsAvito.AboveAdditionalDescription"), new { @class = "setting__label m-l-sm flex-grow" })
        }
    </div>
</div>

<div ng-if="exportFeeds.AdvancedSettings.IsActiveAboveAdditionalDescription" class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.BelowAdditionalDescription, T("Admin.ExportFeed.SettingsAvito.TextAboveAdditionalDescription"))
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative">
        @Html.TextAreaFor(x => x.AboveAdditionalDescription, new { @class = "wysiwyg setting__width-100 input-alt", ckeditor = "", ng_model = "exportFeeds.AdvancedSettings.AboveAdditionalDescription", required = "required", validation_input_text = T("Admin.ExportFeed.SettingsAvito.TextAboveAdditionalDescription") })
    </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.IsActiveBelowAdditionalDescription, T("Admin.ExportFeed.SettingsAvito.BelowAdditionalDescription"))
            </div>
        </div>
    }
        <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
            <label class="adv-checkbox-label">
                @Html.CheckBoxFor(x => x.IsActiveBelowAdditionalDescription, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.IsActiveBelowAdditionalDescription=" + Model.IsActiveBelowAdditionalDescription.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.IsActiveBelowAdditionalDescription" })
                <span class="adv-checkbox-emul"></span>
            </label>
            @if (isMobile)
            {
                @Html.LabelFor(x => x.IsActiveBelowAdditionalDescription, T("Admin.ExportFeed.SettingsAvito.BelowAdditionalDescription"), new { @class = "setting__label m-l-sm flex-grow" })
            }
        </div>
</div>

<div ng-if="exportFeeds.AdvancedSettings.IsActiveBelowAdditionalDescription" class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.BelowAdditionalDescription, T("Admin.ExportFeed.SettingsAvito.TextBelowAdditionalDescription"))
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative">
        @Html.TextAreaFor(x => x.BelowAdditionalDescription, new { @class = "wysiwyg setting__width-100 input-alt", ckeditor = "", ng_model = "exportFeeds.AdvancedSettings.BelowAdditionalDescription", required = "required", validation_input_text = T("Admin.ExportFeed.SettingsAvito.TextBelowAdditionalDescription") })
    </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.NotExportColorSize, T("Admin.ExportFeed.SettingsAvito.NotExportColorSize"))
            </div>
        </div>
    }
        <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
            <label class="adv-checkbox-label">
                @Html.CheckBoxFor(x => x.NotExportColorSize, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.NotExportColorSize=" + Model.NotExportColorSize.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.NotExportColorSize" })
                <span class="adv-checkbox-emul"></span>
            </label>
            @if (isMobile)
            {
                @Html.LabelFor(x => x.NotExportColorSize, T("Admin.ExportFeed.SettingsAvito.NotExportColorSize"), new { @class = "setting__label m-l-sm flex-grow" })
            }
        </div>
</div>

<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.ExportMode, T("Admin.ExportFeed.SettingsAvito.ExportMode"))
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4 relative @(isMobile ? "flex middle-xs" : "")">
        @Html.DropDownList("ddlExportMode", new SelectList(Model.ExportModes, "value", "label", (int)Model.ExportMode), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.ExportMode=" + ((int)Model.ExportMode), ng_model = "exportFeeds.AdvancedSettings.ExportMode" })
        
    </div>

</div>