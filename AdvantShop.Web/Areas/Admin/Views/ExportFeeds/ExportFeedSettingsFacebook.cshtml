@model AdvantShop.Web.Admin.Models.Catalog.ExportFeeds.ExportFeedSettingsFacebookModel

@{
    var isMobile = SettingsDesign.IsMobileTemplate;
}

<div class="form-group row setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap">
                @Html.LabelFor(x => x.OnlyMainOfferToExport, T("Admin.ExportFeeed.SettingsGoogle.OnlyMainOfferToExport"), new { @class = "required" })
            </div>
        </div>
    }

    <div class="col-xs-12 col-md-5 col-wl-4 @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.OnlyMainOfferToExport, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.OnlyMainOfferToExport=" + Model.OnlyMainOfferToExport.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.OnlyMainOfferToExport" })
            <span class="adv-checkbox-emul"></span>
        </label>
        @if(isMobile)
        {
            @Html.LabelFor(x => x.OnlyMainOfferToExport, T("Admin.ExportFeeed.SettingsGoogle.OnlyMainOfferToExport"), new { @class = "required setting__label m-l-sm flex-grow" })
        }
    </div>
</div>

<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.Currency, T("Admin.ExportFeeed.SettingsGoogle.Currency"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.DropDownList("ddlCurrency", new SelectList(Model.Currencies, "Key", "Value", Model.Currency), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.Currency='" + Model.Currency + "'", ng_model = "exportFeeds.AdvancedSettings.Currency" })
    </div>
</div>

<div class="form-group row setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap">
                @Html.LabelFor(x => x.RemoveHtml, T("Admin.ExportFeeed.SettingsGoogle.RemoveHtml"), new { @class = "required" })
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-5 col-wl-4 @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.RemoveHtml, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.RemoveHtml=" + Model.RemoveHtml.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.RemoveHtml" })
            <span class="adv-checkbox-emul"></span>
        </label>
         @if(isMobile)
        {
             @Html.LabelFor(x => x.RemoveHtml, T("Admin.ExportFeeed.SettingsGoogle.RemoveHtml"), new { @class = "required setting__label m-l-sm flex-grow" })
        }
    </div>
</div>



<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.DatafeedTitle, T("Admin.ExportFeeed.SettingsGoogle.DatafeedTitle"), new { @class = "required" })
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.TextBoxFor(x => x.DatafeedTitle, new { @class = "form-control input-alt", required = "required", ng_model = "exportFeeds.AdvancedSettings.DatafeedTitle", validation_input_text = T("Admin.ExportFeeed.SettingsGoogle.DatafeedTitle") })
    </div>
</div>



<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.DatafeedDescription, T("Admin.ExportFeeed.SettingsGoogle.DatafeedDescription"), new { @class = "required" })
            <span class="text-required"></span>
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.TextBoxFor(x => x.DatafeedDescription, new { @class = "form-control input-alt", required = "required", ng_model = "exportFeeds.AdvancedSettings.DatafeedDescription", validation_input_text = T("Admin.ExportFeeed.SettingsGoogle.DatafeedDescription") })
    </div>
</div>



<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.GoogleProductCategory, T("Admin.ExportFeeed.SettingsGoogle.GoogleProductCategory"))
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.TextBoxFor(x => x.GoogleProductCategory, new { @class = "form-control input-alt", ng_model = "exportFeeds.AdvancedSettings.GoogleProductCategory" })
        <a href="https://support.google.com/merchants/answer/160081" class=" @(isMobile ? "block m-t-sm" : "")" target="_blank">@T("Admin.ExportFeed.SettingsGoogle.AvailableCategories")</a>
    </div>
</div>



<div class="form-group row setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap">
                @Html.LabelFor(x => x.ExportNotAvailable, T("Admin.ExportFeed.SettingsGoogle.ExportNotAvailable"), new { @class = "required" })
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-5 col-wl-4 @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.ExportNotAvailable, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.ExportNotAvailable=" + Model.ExportNotAvailable.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.ExportNotAvailable" })
            <span class="adv-checkbox-emul"></span>
        </label>
          @if(isMobile)
        {
             @Html.LabelFor(x => x.ExportNotAvailable, T("Admin.ExportFeed.SettingsGoogle.ExportNotAvailable"), new { @class = "required setting__label m-l-sm flex-grow" })
        }
    </div>
</div>

<div class="form-group row setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2 ">
            <div class="setting-label-wrap">
                @Html.LabelFor(x => x.AllowPreOrderProducts, T("Admin.ExportFeeed.SettingsGoogle.AllowPreOrderProducts"), new { @class = "required" })
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-5 col-wl-4  @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.AllowPreOrderProducts, new { @class = "adv-checkbox-input", ng_model = "exportFeeds.AdvancedSettings.AllowPreOrderProducts" })
            <span class="adv-checkbox-emul"></span>
        </label>
          @if(isMobile)
        {
            @Html.LabelFor(x => x.AllowPreOrderProducts, T("Admin.ExportFeeed.SettingsGoogle.AllowPreOrderProducts"), new { @class = "required setting__label m-l-sm flex-grow" })
        }
    </div>
</div>

<div class="form-group row setting__form-group">
    @if (!isMobile)
    {
        <div class="col-xs-3 col-wl-2">
            <div class="setting-label-wrap">
                @Html.LabelFor(x => x.ColorSizeToName, T("Admin.ExportFeeed.SettingsYandex.ColorSizeToName"), new { @class = "required" })
            </div>
        </div>
    }
    <div class="col-xs-12 col-md-5 col-wl-4 @(isMobile ? "flex middle-xs" : "")">
        <label class="adv-checkbox-label">
            @Html.CheckBoxFor(x => x.ColorSizeToName, new { @class = "adv-checkbox-input", ng_init = "exportFeeds.AdvancedSettings.ColorSizeToName=" + Model.ColorSizeToName.ToLowerString(), ng_model = "exportFeeds.AdvancedSettings.ColorSizeToName" })
            <span class="adv-checkbox-emul"></span>
        </label>
         @if(isMobile)
        {
             @Html.LabelFor(x => x.ColorSizeToName, T("Admin.ExportFeeed.SettingsYandex.ColorSizeToName"), new { @class = "required setting__label m-l-sm flex-grow" })
        }
    </div>
</div>

<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.ProductDescriptionType, T("Admin.ExportFeeed.SettingsGoogle.ProductDescriptionType"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.DropDownList("ddlProductDescriptionType", new SelectList(Model.ProductDescriptionTypeList, "Key", "Value", Model.ProductDescriptionType), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.ProductDescriptionType = '" + Model.ProductDescriptionType + "'", ng_model = "exportFeeds.AdvancedSettings.ProductDescriptionType" })
    </div>
</div>



<div class="form-group row setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2 ">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => x.OfferIdType, T("Admin.ExportFeeed.SettingsGoogle.OfferIdType"), new { @class = "required" })
        </div>
    </div>
    <div class="col-xs-12 col-md-5 col-wl-4">
        @Html.DropDownList("ddlOfferIdType", new SelectList(Model.OfferTypes, "Key", "Value", Model.OfferIdType), new { @class = "form-control input-alt", ng_init = "exportFeeds.AdvancedSettings.OfferIdType = '" + Model.OfferIdType + "'", ng_model = "exportFeeds.AdvancedSettings.OfferIdType" })
    </div>
</div>


<div class="form-group row middle-xs setting__form-group">
    <div class="col-xs-12 col-md-3 col-wl-2">
        <div class="setting-label-wrap setting__label">
            @Html.LabelFor(x => Model.PriceFrom, T("Admin.ExportFeeed.SettingsYandex.PriceRange"))
        </div>
    </div>
    <div class="col-xs-6 col-md-2 col-wl-1 @(isMobile ? "flex middle-xs" : "")">
        <div class="input-group">
            <div class="input-group-addon">
                 @Html.LabelFor(x => Model.PriceFrom, T("Admin.ExportFeeed.SettingsYandex.PriceRangeFrom"))
            </div>
            @Html.TextBoxFor(x => Model.PriceFrom, new { @class = "form-control input-alt", @type = "number", ng_model = "exportFeeds.AdvancedSettings.PriceFrom", validation_input_text = T("Admin.ExportFeeed.SettingsYandex.PriceRangeFrom") })
        </div>
    </div>
    <div class="col-xs-6 col-md-2 col-wl-1 @(isMobile ? "flex middle-xs" : "")">
        <div class="input-group">
            <div class="input-group-addon">
                 @Html.LabelFor(x => Model.PriceTo, T("Admin.ExportFeeed.SettingsYandex.PriceRangeTo"))
            </div>
            @Html.TextBoxFor(x => Model.PriceTo, new { @class = "form-control input-alt", @type = "number", ng_model = "exportFeeds.AdvancedSettings.PriceTo", validation_input_text = T("Admin.ExportFeeed.SettingsYandex.PriceRangeTo") })
        </div>
        @if (isMobile)
        {
            <help-trigger class="ng-cloak m-l-sm p-l-sm" data-title="@T("Admin.ExportFeed.SettingsYandex.PriceRange")" style="height:50%;">
                <div class="help-content">
                    @T("Admin.ExportFeed.SettingsYandex.PriceRange.Help")
                </div>
            </help-trigger>
        }
    </div>
    @if (!isMobile)
    {
        <help-trigger class="ng-cloak p-l-sm" data-title="@T("Admin.ExportFeeed.SettingsYandex.PriceRange")" style="height:50%;">
            <div class="help-content">
                @T("Admin.ExportFeeed.SettingsYandex.PriceRange.Help")
            </div>
        </help-trigger>
    }
</div>


