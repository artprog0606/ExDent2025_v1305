@model AdvantShop.Web.Admin.Models.Settings.APISettingsModel

@{
    var isMobile = SettingsDesign.IsMobileTemplate;
}

@if (Model.ShowOneC)
{
    if (!isMobile)
    {
        <div class="setting-title m-t-none">
            <h2 class="page-name-block-text sticky-page-name-text">1 C</h2>
        </div>
    }
    <div class="form-group row setting__form-group">
        @if (!isMobile)
        {
            <div class="col-sm-3">
                <div class="setting-label-wrap">
                    @Html.LabelFor(x => x._1CEnabled, T("Admin.Settings.API.1CEnabled"))
                </div>
            </div>
        }
        <div class="col-xs-12 col-md-7 @(isMobile ? "flex middle-xs" : "")">
            <label class="adv-checkbox-label form-label-block @(isMobile ? "p-r-xs" : "")">
                @Html.CheckBoxFor(x => x._1CEnabled, new { ng_model = "settings._1CEnabled", @id = "1CEnabled", ng_init = "settings._1CEnabled=" + Model._1CEnabled.ToLowerString(), @class = "adv-checkbox-input" })
                <span class="adv-checkbox-emul"></span>
            </label>
            @if (isMobile)
            {
                <label for="1CEnabled" class="setting__label col-xs">
                    @T("Admin.Settings.API.1CEnabled")
                </label>
            }
            <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.API.1CEnabled")">
                @T("Admin.Settings.API.1CEnabledHint")
            </help-trigger>
        </div>
    </div>

    <div class="form-group row setting__form-group">
         @if (!isMobile)
         {
            <div class="col-xs-3 ">
                <div class="setting-label-wrap">
                    @Html.LabelFor(x => x._1CDisableProductsDecremention, T("Admin.Settings.API.1CDisableProductsDecremention"))
                </div>
            </div>
         }
        <div class="col-xs-12 col-md-7 @(isMobile ? "flex middle-xs" : "")">
            <label class="adv-checkbox-label form-label-block @(isMobile ? "p-r-xs" : "")">
                @Html.CheckBoxFor(x => x._1CDisableProductsDecremention, new { ng_model = "settings._1CDisableProductsDecremention",@id = "1CDisableProductsDecremention", ng_init = "settings._1CDisableProductsDecremention=" + Model._1CDisableProductsDecremention.ToLowerString(), @class = "adv-checkbox-input" })
                <span class="adv-checkbox-emul"></span>
            </label>
             @if (isMobile)
         {
                <label for="1CDisableProductsDecremention" class="setting__label col-xs">
                    @T("Admin.Settings.API.1CDisableProductsDecremention")
                </label>
         }
            <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.API.1CDisableProductsDecremention")">
                @T("Admin.Settings.API.1CDisableProductsDecrementionHint")
                <br /><br />
                Подробнее:<br />
                <a href="https://www.advantshop.net/help/pages/1c-integration">Интеграция магазина с 1С</a>
            </help-trigger>
        </div>
    </div>

    <div class="form-group middle-xs row setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ExportOrdersType, T("Admin.Settings.API.ExportOrdersType"))
            </div>
        </div>
        <div class="col-xs-12 col-md-6 col-wl-4 flex middle-xs">
            @Html.DropDownListFor(x => x.ExportOrdersType, Model.ExportOrders, new { @class = "form-control input-alt", ng_model = "settings.ExportOrdersType", ng_init = "settings.ExportOrdersType='" + Model.ExportOrdersType + "'" })

            <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.API.ExportOrdersType")">
                @T("Admin.Settings.API.ExportOrdersTypeHint")
            </help-trigger>
        </div>
    </div>

    <div class="form-group row setting__form-group">
        @if (!isMobile)
        {
            <div class="col-xs-3 ">
                <div class="setting-label-wrap">
                    @Html.LabelFor(x => x._1CUpdateStatuses, T("Admin.Settings.API.1CUpdateStatuses"))
                </div>
            </div>
        }
            <div class="col-xs-12 col-md-7 @(isMobile ? "flex middle-xs" : "")">
                <label class="adv-checkbox-label form-label-block @(isMobile ? "p-r-xs" : "")">
                    @Html.CheckBoxFor(x => x._1CUpdateStatuses, new { ng_model = "settings._1CUpdateStatuses",@id = "1CUpdateStatuses", ng_init = "settings._1CUpdateStatuses=" + Model._1CUpdateStatuses.ToLowerString(), @class = "adv-checkbox-input" })
                    <span class="adv-checkbox-emul"></span>
                </label>
                  @if (isMobile)
                    {
                        <label for="1CUpdateStatuses" class="setting__label col-xs">
                            @T("Admin.Settings.API.1CUpdateStatuses")
                        </label>
                    }
                <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.API.1CUpdateStatuses")">
                    @T("Admin.Settings.API.1CUpdateStatusesHint")
                </help-trigger>
            </div>
        </div>

    <div class="form-group middle-xs row setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x._1CUpdateProducts, T("Admin.Settings.API.1CUpdateProducts"))
            </div>
        </div>
        <div class="col-xs-12 col-md-6 col-wl-4 flex middle-xs">
            @Html.DropDownListFor(x => x._1CUpdateProducts, Model.UpdateProducts, new { @class = "form-control input-alt", ng_model = "settings._1CUpdateProducts", ng_init = "settings._1CUpdateProducts='" + Model._1CUpdateProducts + "'" })


            <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.API.1CUpdateProducts")">
                @T("Admin.Settings.API.1CUpdateProductsHint")
                <br /><br />
                Подробнее:<br />
                <a href="https://www.advantshop.net/help/pages/1c-integration">Интеграция магазина с 1С</a>
            </help-trigger>
        </div>
    </div>

    <div class="form-group middle-xs row setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x._1CSendProducts, T("Admin.Settings.API.1CSendProducts"))
            </div>
        </div>
        <div class="col-xs-12 col-md-6 col-wl-4 flex middle-xs">
            @Html.DropDownListFor(x => x._1CSendProducts, Model.SendProducts, new { @class = "form-control input-alt", ng_model = "settings._1CSendProducts", ng_init = "settings._1CSendProducts='" + Model._1CSendProducts + "'" })

            <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.API.1CSendProducts")">
                @T("Admin.Settings.API.1CSendProductsHint")
                <br /><br />
                Подробнее:<br />
                <a href="https://www.advantshop.net/help/pages/1c-integration">Интеграция магазина с 1С</a>
            </help-trigger>
        </div>
    </div>

    <div class="form-group middle-xs row setting__form-group" data-ng-show="@AdvantShop.Saas.SaasDataService.IsEnabledFeature((saas => saas.HasWarehouses)).ToLowerString()">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x._1CStocksToWarehouseId, T("Admin.Settings.API.Warehouse"))
            </div>
        </div>
        <div class="col-xs-12 col-md-6 col-wl-4 flex middle-xs">
            @Html.DropDownListFor(x => x._1CStocksToWarehouseId, Model.Warehouses, new { @class = "form-control input-alt", ng_model = "settings._1CStocksToWarehouseId", ng_init = "settings._1CStocksToWarehouseId='" + Model._1CStocksToWarehouseId + "'" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ImportPhotosUrl, T("Admin.Settings.API.ImportPhotosUrl"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.ImportPhotosUrl, new { @class = "form-control input-alt", ng_model = "settings.ImportPhotosUrl", @readonly = "true" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ImportProductsUrl, T("Admin.Settings.API.ImportProductsUrl"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.ImportProductsUrl, new { @class = "form-control input-alt", ng_model = "settings.ImportProductsUrl", @readonly = "true" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ExportProductsUrl, T("Admin.Settings.API.ExportProductsUrl"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.ExportProductsUrl, new { @class = "form-control input-alt", ng_model = "settings.ExportProductsUrl", @readonly = "true" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.DeletedProducts, T("Admin.Settings.API.DeletedProducts"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.DeletedProducts, new { @class = "form-control input-alt", ng_model = "settings.DeletedProducts", @readonly = "true" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ExportOrdersUrl, T("Admin.Settings.API.ExportOrdersUrl"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.ExportOrdersUrl, new { @class = "form-control input-alt", ng_model = "settings.ExportOrdersUrl", @readonly = "true" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.ChangeOrderStatusUrl, T("Admin.Settings.API.ChangeOrderStatusUrl"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.ChangeOrderStatusUrl, new { @class = "form-control input-alt", ng_model = "settings.ChangeOrderStatusUrl", @readonly = "true" })
        </div>
    </div>

    <div class="form-group row middle-xs setting__form-group">
        <div class="col-xs-12 col-md-3">
            <div class="setting-label-wrap setting__label">
                @Html.LabelFor(x => x.DeletedOrdersUrl, T("Admin.Settings.API.DeletedOrdersUrl"))
            </div>
        </div>
        <div class="col-xs-12 col-md-9">
            @Html.TextBoxFor(x => x.DeletedOrdersUrl, new { @class = "form-control input-alt", ng_model = "settings.DeletedOrdersUrl", @readonly = "true" })
        </div>
    </div>
}
