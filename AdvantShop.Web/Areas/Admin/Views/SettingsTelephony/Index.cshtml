@using AdvantShop.Saas
@using AdvantShop.Core.Services.IPTelephony
@using AdvantShop.Core.Services.Admin
@model AdvantShop.Web.Admin.Models.Settings.IPTelephonySettingsModel
@{
    Layout = "~/Areas/Admin/Views/Settings/_SettingsLayout.cshtml";
    var culture = AdvantShop.Localization.Culture.GetCulture();
    var offset = (int)culture.DateTimeFormat.FirstDayOfWeek;
    var isMobile = SettingsDesign.IsMobileTemplate;
    var isAdminv3 = AdminAreaTemplate.Current == "adminv3";
    var hours = new List<SelectListItem>();
    for (int i = 0; i < 24; i++)
    {
        hours.Add(new SelectListItem { Text = i.ToString().PadLeft(2, '0'), Value = string.Format("{0}:00:00", i.ToString().PadLeft(2, '0')) });
    }

    Html.AddAsset("settingsTelephony");
}
<div class="form-horizontal">
    @using (Html.BeginAbsoluteUrlForm("Index", "SettingsTelephony", FormMethod.Post, new { name = "form", enctype = "multipart/form-data", novalidate = "novalidate" }))
    {
        var headerModel = new AdvantShop.Web.Admin.ViewModels.Shared.Common.HeaderViewModel();
        headerModel.ShowOnlySticky = true;
        headerModel.EnabledBack = true;
        headerModel.Back = new AdvantShop.Web.Admin.ViewModels.Shared.Common.BackViewModel()
        {
            Text = T("Admin.Settings.IndexSettings").ToString(),
            Url = Url.AbsoluteActionUrl("Index", "Settings"),
            NgBackTriggerCallback = "settingsTelephony.onSelectTab(null)"
        };

        headerModel.DefaultTitle = T("Admin.Settings.Commonpage.Telephony").ToString();

        headerModel.Controls.Add(
             new ButtonModel()
             {
                 Modificators = new List<eButtonModificators>()
                      {
                                eButtonModificators.OnlyIcon
                                },
                 ColorType = eColorType.Secondary,
                 Type = eButtonType.Save,
                 Attributes = new[] { "ng-if=\"settingsTelephony.tabActiveIndex == 'telephony'\"", "type=\"submit\"", "data-button-validation disabled", "ng-disabled=\"!form.modified\"" },
                 Icon = new ButtonIcon()
                 {
                     SvgName = "done",
                     Attributes = new { width = 25, height = 25 }
                 }
             }
        );

        headerModel.Controls.Add(
      new ButtonModel()
      {
          Modificators = new List<eButtonModificators>()
      {
                        eButtonModificators.OnlyIcon
                                          },
          ColorType = eColorType.Secondary,
          Type = eButtonType.Add,
          Attributes = new[] { "ng-if=\"settingsTelephony.tabActiveIndex == 'leadsources'\"" },
          WrapStart = " <ui-modal-trigger data-controller=\"'ModalAddPhoneCtrl'\" template-url=\"../areas/admin/content/src/settingsTelephony/modals/addPhone.html\" data-resolve=\"{params : {orderSources: settingsTelephony.orderSources, phoneOrderSources : settingsTelephony.phoneOrderSources}}\" data-on-close=\"ctrl.addItem(item);settingsTelephony.examinationPhoneOrderSources();\">",
          WrapEnd = "</ui-modal-trigger>",
          Icon = new ButtonIcon()
          {
              SvgName = "plus-alt",
              Attributes = new { width = 16, height = 16 },
          }
      }
);

        @Html.Header(headerModel);


        if (!isMobile)
        {
            <div class="sticky-page-name p-n m-n" sticky sticky-top="0">
                <div class="page-name-block sticky-page-name-inner header-hidden">
                    <div class="page-name-block-item-main">
                        <h1 class="page-name-block-text sticky-page-name-text">
                            <span class="float-header-page" ng-bind="app.getTitle()"></span>
                        </h1>
                    </div>
                    <div class="page-name-block-item-additional">
                        <input type="submit" class="btn btn-sm btn-success" value="@T("Admin.Save")" data-button-validation disabled ng-disabled="!form.modified" />
                    </div>
                </div>
            </div>
        }

        if (isAdminv3 && !isMobile)
        {
            @Html.Back(T("Admin.Settings.Telephony.Settings").ToString(), Url.AbsoluteActionUrl("Index", "Settings"))
            <div class="sticky-page-name">
                <div class="row middle-xs">
                    <div class="col-xs-6">
                        <h1 class="page-name-block-text"> @T("Admin.Settings.Commonpage.Telephony")</h1>
                    </div>
                    <div class="col-xs-6">
                        <div class="text-right">
                            <input type="submit" class="btn btn-sm btn-success btn--margin-left" value="@T("Admin.Save")" data-button-validation disabled ng-disabled="!form.modified" />
                        </div>
                    </div>
                </div>
            </div>
        }

        @Html.AntiForgeryToken()
        @*<div class="error">
                @Html.ValidationSummary()
            </div>*@

        <uib-tabset uid="telephonyTab" 
                    on-select-batch="settingsTelephony.onSelectTab(tab.index);"
                    @Html.Raw(isMobile ? "tabs-mode=\"'navigation'\" class=\"tabs-navigation\"" : "")>
            <uib-tab index="'telephony'" classes="ng-tab" heading="@T("Admin.Settings.Telephony")">
                @if (!SaasDataService.IsSaasEnabled || SaasDataService.CurrentSaasData.HaveTelephony)
                {
                    if (Model.ShowCrm)
                    {
                        <div class="setting-title m-t-none">
                            <h3 class="inline middle-cell m-r-xs setting__subtitle">@T("Admin.SettingsTelephony.CallsSalesFunnel")</h3>
                        </div>

                        <div class="form-group row middle-xs setting__form-group">
                            <div class="col-xs-12 col-md-3">
                                <div class="setting-label-wrap">
                                    <label for="CallsSalesFunnelId" class="form-label-block setting__label">@T("Admin.SettingsTelephony.DefaultCallsSalesFunnel")</label>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-4 flex middle-xs">
                                @Html.DropDownListFor(x => x.CallsSalesFunnelId, Model.SalesFunnels, new { @class = "form-control input-alt", ng_model = "settingsTelephony.callsSalesFunnelId" })
                                <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.SettingsTelephony.CallsSalesFunnel")">
                                    @T("Admin.SettingsTelephony.CallsSalesFunnelHint")
                                </help-trigger>
                            </div>
                        </div>
                    }

                    <div class="setting-title m-t-none flex middle-xs setting-title setting--flex-column setting__form-group">
                        <h3 class="inline middle-cell m-r-xs setting--align-top setting__subtitle">@T("Admin.Settings.Telephony")</h3>
                        <a href="https://www.advantshop.net/help/pages/vozmozhnosti-podkliucheniya-ip-telefonii-60" target="_blank" class="link-academy link-invert inline-flex middle-xs p-b-xs setting--align-top @(!isMobile ? "p-l-sm" : "setting--help-link")">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve" width="18" height="18" fill="#989a9b" class="m-r-xs">
                            <path d="M20.005,512c-5.097,0-10.116-1.948-13.925-5.641c-5.845-5.666-7.672-14.309-4.621-21.855l45.411-112.333  C16.162,332.253,0,285.425,0,236c0-63.375,26.855-122.857,75.62-167.489C123.891,24.331,187.952,0,256,0  s132.109,24.331,180.38,68.511C485.145,113.143,512,172.625,512,236c0,45.448-14.04,89.577-40.602,127.615  c-6.325,9.057-18.792,11.271-27.849,4.947s-11.271-18.792-4.947-27.849C460.452,309.425,472,273.215,472,236  c0-108.075-96.897-196-216-196S40,127.925,40,236c0,43.783,15.577,85.2,45.046,119.773c4.834,5.671,6.115,13.561,3.321,20.47  l-31.366,77.589l91.345-40.266c5.063-2.231,10.826-2.267,15.916-0.095C193.082,425.766,223.946,432,256,432  c36.892,0,73.299-8.587,105.286-24.832c9.85-5,21.887-1.072,26.889,8.775c5.001,9.849,1.073,21.887-8.775,26.889  C341.828,461.914,299.157,472,256,472c-34.48,0-67.835-6.191-99.276-18.413L28.068,510.301C25.474,511.444,22.728,512,20.005,512z   M276,325V217c0-11.046-8.954-20-20-20s-20,8.954-20,20v108c0,11.046,8.954,20,20,20S276,336.046,276,325z M256,128  c-11.046,0-20,8.954-20,20l0,0c0,11.046,8.954,20,20,20s20-8.954,20-20l0,0C276,136.954,267.046,128,256,128z"></path>
                            </svg>
                            <span>@T("Admin.Settings.Telephony.Instruction")</span>
                        </a>
                    </div>

                    <div class="form-group row middle-xs setting__form-group">
                        <div class="col-xs-12 col-md-3">
                            <div class="setting-label-wrap">
                                <label for="CurrentIPTelephonyOperatorType" class="form-label-block setting__label">@T("Admin.Settings.Telephony.Operator")</label>
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-4 flex middle-xs">
                            @Html.DropDownListFor(x => x.CurrentIPTelephonyOperatorType, Model.IPTelephonyOperatorTypes, new { @class = "form-control input-alt", ng_model = "settingsTelephony.curOperator", ng_init = "settingsTelephony.curOperator='" + Model.CurrentIPTelephonyOperatorType.ToString() + "'" })
                            <help-trigger class="ng-cloak m-l-xs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.Telephony.Operator")">
                                @T("Admin.Settings.Telephony.OperatorHint")
                            </help-trigger>
                        </div>
                    </div>

                    <div class="form-group row middle-xs setting__form-group">
                        @if (!isMobile)
                        {
                            <div class="col-xs-3">
                                <div class="setting-label-wrap">
                                    <label for="PhonerLiteActive" class="form-label-block setting__label">@T("Admin.Settings.Telephony.PhonerLite")</label>
                                </div>
                            </div>
                        }
                        <div class="col-xs-12 col-md-4 @(isMobile ? "flex middle-xs" : "")">
                            <label class="adv-checkbox-label form-label-block @(isMobile ? "p-l-xs" : "")">
                                @Html.CheckBoxFor(x => x.PhonerLiteActive, new { ng_model = "settingsTelephony.phonerLiteActive", ng_init = "settingsTelephony.phonerLiteActive=" + Model.PhonerLiteActive.ToString().ToLower(), @class = "adv-checkbox-input" })
                                <span class="adv-checkbox-emul"></span>
                            </label>
                            @if (isMobile)
                            {
                                <div class="col-xs">
                                    <label for="PhonerLiteActive" class="form-label-block">@T("Admin.Settings.Telephony.PhonerLite")</label>
                                </div>
                            }
                            <help-trigger class="ng-cloak word-spacing @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.Telephony.PhonerLite")">
                                @T("Admin.Settings.Telephony.PhonerLiteNote")
                            </help-trigger>
                        </div>
                    </div>

                    <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Sipuni.ToString()'">
                        @Html.Partial("_Sipuni", Model)
                    </div>
                    <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Mango.ToString()'">
                        @Html.Partial("_Mango", Model)
                    </div>
                    <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Telphin.ToString()'">
                        @Html.Partial("_Telphin", Model)
                    </div>
                    <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Zadarma.ToString()'">
                        @Html.Partial("_Zadarma", Model)
                    </div>

                    @*CallBack head*@

                    <div class="m-t-none ng-hide @(isMobile ? "form-group setting__form-group" : "setting-title")" ng-show="settingsTelephony.curOperator != '@EOperatorType.None.ToString()'">
                        @if (isMobile)
                        {
                            <div class="flex setting--label-with-checkbox-reverse">
                                <label for="CallBackEnabled" class="form-label-block col-xs setting__label">@T("Admin.Settings.Telephony.CallBack.Title")</label>
                                <label class="adv-checkbox-label form-label-block @(isMobile ? "p-l-xs" : "")">
                                    @Html.CheckBoxFor(x => x.CallBackEnabled, new { ng_model = "settingsTelephony.callBackEnabled", @class = "adv-checkbox-input" })
                                    <span class="adv-checkbox-emul"></span>
                                </label>
                            </div>
                        }
                        else
                        {
                            <h3 class="@(isMobile ? "flex setting--label-with-checkbox-reverse" : "")">
                                <label for="CallBackEnabled" class="form-label-block @(isMobile ? "col-xs" : "")">@T("Admin.Settings.Telephony.CallBack.Title")</label>
                                <label class="adv-checkbox-label form-label-block @(isMobile ? "" : "m-l")">
                                    @Html.CheckBoxFor(x => x.CallBackEnabled, new { ng_model = "settingsTelephony.callBackEnabled", @class = "adv-checkbox-input" })
                                    <span class="adv-checkbox-emul"></span>
                                </label>
                            </h3>
                        }

                    </div>

                    <div class="ng-hide" ng-show="settingsTelephony.callBackEnabled">

                        <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Sipuni.ToString()'">
                            @Html.Partial("_CallbackSipuni", Model)
                        </div>
                        <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Mango.ToString()'">
                            @Html.Partial("_CallbackMango", Model)
                        </div>
                        <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Telphin.ToString()'">
                            @Html.Partial("_CallbackTelphin", Model)
                        </div>
                        <div class="ng-hide" ng-show="settingsTelephony.curOperator == '@EOperatorType.Zadarma.ToString()'">
                            @Html.Partial("_CallbackZadarma", Model)
                        </div>

                        @*Callback settings*@

                        <div class="ng-hide" ng-show="settingsTelephony.curOperator != '@EOperatorType.None.ToString()'">

                            <div class="form-group row middle-xs setting__form-group">
                                <div class="col-xs-12 col-md-3">
                                    <div class="setting-label-wrap">
                                        <label for="CallBackShowMode" class="form-label-block setting__label">@T("Admin.Settings.Telephony.CallBack.ShowMode")</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-6">
                                    @Html.DropDownListFor(x => x.CallBackShowMode, Model.CallBackShowModes, new { @class = "form-control input-alt", ng_model = "settingsTelephony.callBackShowMode", ng_init = "settingsTelephony.callBackShowMode='" + Model.CallBackShowMode + "'" })
                                </div>
                            </div>

                            <div class="form-group row middle-xs setting__form-group">
                                <div class="col-xs-12 col-md-3">
                                    <div class="setting-label-wrap">
                                        <label for="CallBackTimeInterval" class="form-label-block setting__label">@T("Admin.Settings.Telephony.CallBack.TimeInterval")</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-6 relative @(isMobile ? "flex middle-xs" : "")">
                                    @Html.TextBoxFor(x => x.CallBackTimeInterval, new { ng_model = "settingsTelephony.callBackTimeInterval", @class = "form-control input-alt" })
                                    <help-trigger class="ng-cloak help-trigger-icon-abs @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.Telephony.CallBack.TimeInterval")">
                                        @T("Admin.Settings.Telephony.CallBack.TimeIntervalNote")
                                    </help-trigger>
                                </div>
                            </div>

                            <div class="form-group row middle-xs setting__form-group">
                                <div class="col-xs-12 col-md-3">
                                    <div class="setting-label-wrap">
                                        <label for="CallBackWorkTimeText" class="form-label-block setting__label">@T("Admin.Settings.Telephony.CallBack.WorkTimeText")</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-6">
                                    <div class="row">
                                        <div class="col-xs-12 relative @(isMobile ? "flex middle-xs m-b-xs" : "")">
                                            @Html.TextBoxFor(x => x.CallBackWorkTimeText, new { ng_model = "settingsTelephony.callBackWorkTimeText", @class = "form-control input-alt" })
                                            <help-trigger class="ng-cloak help-trigger-icon-abs  @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.Telephony.CallBack.WorkTimeText")">
                                                @T("Admin.Settings.Telephony.CallBack.WorkTimeTextNote")
                                            </help-trigger>
                                        </div>
                                        <div class="col-xs-12 @(isMobile ? "fs-sm" : "")">
                                            <span class="help-block">
                                                @T("Admin.Settings.Telephony.CallBack.WorkTimeTextHelp")
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row middle-xs setting__form-group">
                                <div class="col-xs-12 col-md-3">
                                    <div class="setting-label-wrap">
                                        <label for="CallBackNotWorkTimeText" class="form-label-block setting__label">@T("Admin.Settings.Telephony.CallBack.NotWorkTimeText")</label>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-md-6 relative @(isMobile ? "flex middle-xs m-b-xs" : "")">
                                    @Html.TextBoxFor(x => x.CallBackNotWorkTimeText, new { ng_model = "settingsTelephony.callBackNotWorkTimeText", @class = "form-control input-alt" })
                                    <help-trigger class="ng-cloak help-trigger-icon-abs  @(isMobile ? "p-l-xs m-l-sm" : "")" data-title="@T("Admin.Settings.Telephony.CallBack.NotWorkTimeText")">
                                        @T("Admin.Settings.Telephony.CallBack.NotWorkTimeTextNote")
                                    </help-trigger>
                                </div>
                            </div>

                            <div class="form-group row setting__form-group">
                                <div class="col-xs-12 col-md-3 @(isMobile ? "flex middle-xs setting-label-wrap" : "")">
                                    <div class=" @(isMobile ? "" : "setting-label-wrap")">
                                        <label class="form-label-block setting__label">@T("Admin.Settings.Telephony.CallBack.WorkSchedule")</label>
                                    </div>
                                    @if (isMobile)
                                    {
                                        <help-trigger class="ng-cloak help-trigger-icon-abs m-l-sm" data-title="@T("Admin.Settings.Telephony.CallBack.WorkSchedule")">
                                            @T("Admin.Settings.Telephony.CallBack.WorkScheduleNote")
                                        </help-trigger>
                                    }
                                </div>
                                <div class="col-xs-12 col-md-3 col-wl-2 work-schedule relative">
                                    <input type="text" id="ScheduleSerialized" name="ScheduleSerialized" value="{{settingsTelephony.schedule | json:0 }}" hidden ng-init="settingsTelephony.schedule = @Model.ScheduleSerialized"/>
                                    @for (int i = 0; i < 7; i++)
                                    {
                                        var day = (DayOfWeek)(i + offset < 7 ? i + offset : i + offset - 7);
                                        var from = Model.Schedule.Get(day).From.ToString();
                                        var to = Model.Schedule.Get(day).To.ToString();
                                        <div class="day-row @(isMobile ? "flex middle-xs m-b-sm" : "")">
                                            <label class="adv-checkbox-label form-label-block @(isMobile ? "col-xs-1" : "")">
                                                @Html.CheckBox("chkEnabled" + day, new { ng_model = "settingsTelephony.schedule." + day + ".Enabled", ng_init = "settingsTelephony.schedule." + day + ".Enabled = " + Model.Schedule.Get(day).Enabled.ToString().ToLower(), @class = "adv-checkbox-input" })
                                                <span class="adv-checkbox-emul"></span>
                                            </label>
                                            <label for="@("chkEnabled" + day)" class="day-name">@culture.DateTimeFormat.GetShortestDayName(day): </label>
                                            @Html.DropDownList("ddlHoursFrom" + day, new SelectList(hours, "Value", "Text", from), new
                                            {
                                                @class = "form-control day-hour input-alt setting--m-r-xs setting--m-l-xs",
                                                ng_model = "settingsTelephony.schedule." + day + ".From",
                                                ng_init = "settingsTelephony.schedule." + day + ".From = '" + from + "'"
                                            })
                                            <span>:00</span>
                                            <span> - </span>
                                            @Html.DropDownList("ddlHoursTo" + day, new SelectList(hours, "Value", "Text", to), new
                                            {
                                                @class = "form-control day-hour input-alt setting--m-r-xs setting--m-l-xs",
                                                ng_model = "settingsTelephony.schedule." + day + ".To",
                                                ng_init = "settingsTelephony.schedule." + day + ".To = '" + to + "'"
                                            })
                                            <span>:00</span>
                                        </div>
                                    }
                                    @if (!isMobile)
                                    {
                                        <help-trigger class="ng-cloak help-trigger-icon-abs" data-title="@T("Admin.Settings.Telephony.CallBack.WorkSchedule")">
                                            @T("Admin.Settings.Telephony.CallBack.WorkScheduleNote")
                                        </help-trigger>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>

                    <div ng-show="settingsTelephony.curOperator != '@EOperatorType.None.ToString()'">
                        @if (!isMobile)
                        {
                            <hr class="m-t-xl" />
                        }
                        <div class="form-group row middle-xs setting--label-with-checkbox-reverse">
                            <div class="col-xs-11 col-md-3">
                                <div class="setting-label-wrap setting--m-none setting__label">
                                    <label for="LogNotifications" class="form-label-block">@T("Admin.Settings.Telephony.LogNotifications")</label>
                                </div>
                            </div>
                            <div class="col-xs-1 col-sm-4">
                                <label class="adv-checkbox-label form-label-block">
                                    @Html.CheckBoxFor(x => x.LogNotifications, new { ng_model = "settingsTelephony.logNotifications", @class = "adv-checkbox-input" })
                                    <span class="adv-checkbox-emul"></span>
                                </label>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    @Html.Action("GetFeature", "Service", new { id = ESaasProperty.HaveTelephony.ToString(), partial = true })
                }
            </uib-tab>

            <uib-tab index="'leadsources'" classes="ng-tab" heading="@T("Admin.SettingsTelephony.Index.SourcesOfLeads")">
                @if (!SaasDataService.IsSaasEnabled || SaasDataService.CurrentSaasData.HaveTelephony)
                {
                    <div class="setting-title m-t-none @(isMobile ? "flex " : "")">
                        <h3 class="inline setting__subtitle setting--m-t-none @(isMobile ? "flex-grow" : "")">@T("Admin.SettingsTelephony.Index.BundleOfPhoneAndSource")</h3>
                        <help-trigger class="ng-cloak" style="@(isMobile ? "margin-top:5px;margin-left:15px;" : "")" data-title="@T("Admin.SettingsTelephony.Index.BundleOfPhoneAndSource")">
                            @T("Admin.SettingsTelephony.Index.SpecifyDependenceOfSourceOnPhone")
                        </help-trigger>
                    </div>
                    if (!isMobile)
                    {
                        <div class="form-group row">
                            <div class="col-xs-3">
                                <strong>@T("Admin.SettingsTelephony.Index.PhoneNumber")</strong>
                            </div>
                            <div class="col-xs-4">
                                <strong>@T("Admin.SettingsTelephony.Index.Source")</strong>
                            </div>
                        </div>

                        <div class="form-group row middle-xs" ng-repeat="(phone, orderSourceId) in settingsTelephony.phoneOrderSources" bs-modifiable="false">
                            <div class="col-xs-3 align-center">
                                <input type="text" class="form-control" ng-model="phone" disabled />
                            </div>
                            <div class="col-xs-4">
                                <select ng-model="orderSourceId" ng-options="s.value as s.label for s in settingsTelephony.orderSources" class="form-control"
                                        ng-change="settingsTelephony.savePhoneOrderSources(phone, orderSourceId)">
                                    <option value="">@T("Admin.SettingsTelephony.Index.NotSelected")</option>
                                </select>
                            </div>
                            <div class="col-xs-2 align-center">
                                <a href="" class="fa fa-times link-invert link-decoration-none" ng-click="settingsTelephony.deletePhone(phone)" title="@T("Admin.SettingsTelephony.Index.Delete")"></a>
                            </div>
                        </div>

                        <div class="form-group row" bs-modifiable="false">
                            <div class="col-xs-3">
                                <input type="text" class="form-control" ng-model="settingsTelephony.newPhone"
                                       placeholder="@T("Admin.SettingsTelephony.Index.Phone")" pattern="^[\d,\.]*$"
                                       validation-input-text="@T("Admin.SettingsTelephony.Index.PhoneNumberInNumeric")" />
                            </div>
                            <div class="col-xs-4">
                                <select ng-model="settingsTelephony.newOrderSourceId" ng-options="s.value as s.label for s in settingsTelephony.orderSources" class="form-control">
                                    <option value="">@T("Admin.SettingsTelephony.Index.SelectSource")</option>
                                </select>
                            </div>
                            <div class="col-xs-2">
                                <button type="button" class="btn btn-sm btn-success" title="@T("Admin.SettingsTelephony.Index.Add")"
                                        button-validation button-validation-success="settingsTelephony.addPhone()">
                                    <span class="fa fa-plus"></span>
                                    @T("Admin.SettingsTelephony.Index.Add")
                                </button>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div ng-if="settingsTelephony.PhoneOrderSourcesHasChild" class="swipe-line ui-grid-custom__swipe-line">
                            <div class="swipe-line__inner m-b-sm" ng-repeat="(phone, orderSourceId) in settingsTelephony.phoneOrderSources" bs-modifiable="false" data-swipe-line>
                                <div class="swipe-line__content">
                                    <div class="card card--gap-row-sm card--p-18">
                                        <div class="form-group">
                                            <strong>@T("Admin.SettingsTelephony.Index.PhoneNumber")</strong>
                                            <div class="m-t-sm">
                                                <input type="text" class="form-control input-alt" ng-model="phone" disabled />
                                            </div>
                                        </div>
                                        <div>
                                            <strong>@T("Admin.SettingsTelephony.Index.Source")</strong>
                                            <div class="setting-label-wrap setting__label m-t-sm">
                                                <select ng-model="orderSourceId" ng-options="s.value as s.label for s in settingsTelephony.orderSources" class="form-control input-alt"
                                                        ng-change="settingsTelephony.savePhoneOrderSources(phone, orderSourceId)">
                                                    <option value="">@T("Admin.SettingsTelephony.Index.NotSelected")</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div data-swipe-line-right class="swipe-line__right swipe-line__btn-group">
                                    <a title="@T("Admin.SettingsTelephony.Index.Delete")" class="link-invert btn btn-sm btn-danger btn--as-swipe-line flex center-xs middle-xs" ng-click="settingsTelephony.deletePhone(phone)">Удалить</a>
                                </div>
                            </div>
                        </div>
                        <div ng-if="!settingsTelephony.PhoneOrderSourcesHasChild" class="ui-grid-empty-text card">
                            Ни одной записи не найдено
                        </div>
                    }
                }
                else
                {
                    @Html.Action("GetFeature", "Service", new { id = ESaasProperty.HaveTelephony.ToString(), partial = true })
                }
            </uib-tab>

            @if (!isAdminv3)
            {
                <div class="js-not-tabs">
                    <input type="submit" class="btn btn-sm btn-success btn--margin-left" value="@T("Admin.Save")" data-button-validation disabled ng-disabled="!form.modified" />
                </div>
            }
        </uib-tabset>
    }
</div>
