@using System.Linq;
@model AdvantShop.Web.Admin.Models.Catalog.ExportCategories.ExportCategoriesModel

@{
    var isMobile = SettingsDesign.IsMobileTemplate;
}

<div class="export-categories">
<div class="@(isMobile ? "" : "m-b-md")" ng-init="exportCategories.initExportFields(@Model.DefaultExportFields);@(isMobile ? "exportFeeds.exportCategories = exportCategories" : "")">
    <div class="page-name-block">
        @*<div class="page-name-block-item-main">
                <h1 class="page-name-block-text">
                    @T("Admin.ExportCategories.CategoriesExport")
                </h1>
            </div>*@
        <div class="page-name-block-item-additional">
            <!--<button data-e2e="ButtonSave" type="submit" class="btn btn-sm btn-success" ng-click="exportCategories.startExport()">
                @T("Admin.ExportCategories.Export")
            </button>-->
        </div>
    </div>
</div>

@*@if (isMobile)
{
    <give-ctrl on-init="exportFeeds.getExportCategories(exportCategories)" mobile-default-export-fields="@Model.DefaultExportFields" mobile-csv-separator="@Model.CsvSeparator" mobile-csv-encoding="@Model.CsvEncoding"></give-ctrl>
}*@


<div class="row">
    <div class="col-xs-12">

        @Html.ValidationSummary()

        <div class="row">
            <div class="col-xs-12 col-md-2 @(isMobile ? "setting__form-group" : "")">
                <h2 class="category-title setting__subtitle setting--m-t-sm" style="@(isMobile ? "margin-bottom:10px;" : "")">@T("Admin.ExportCategories.Index.Main")</h2>
                <div class="">
                    @T("Admin.ExportCategories.Index.ExportParameters")
                </div>
            </div>
            <div class="col-xs-12 col-md-10">
                <div class="ibox category-block">
                    <div class="ibox-content category-content border_none">
                        <div>
                            <div class="row category-row @(isMobile ? "setting__form-group" : "")">
                                <div class="col-xs-12 col-md-2 @(isMobile ? "setting-label-wrap setting__label" : "")">
                                    <span class="text-required">@T("Admin.ExportCategories.Settings.CsvSeparator")</span>
                                </div>
                                <div class="col-xs-12 col-md-4">
                                    @Html.DropDownListFor(modelItem => Model.CsvSeparator, new SelectList(Model.CsvSeparatorList, "Value", "Key"), new { @class = "form-control input-alt", ng_model = "exportCategories.settings.csvSeparator", ng_init = "exportCategories.settings.csvSeparator='" + Model.CsvSeparator + "'" })
                                </div>
                            </div>
                        </div>

                        <div ng-if="exportCategories.settings.csvSeparator == 'custom'">
                            <div class="row category-row @(isMobile ? "setting__form-group" : "")">
                                <div class="col-xs-12 col-md-2 @(isMobile ? "setting-label-wrap setting__label" : "")">
                                    <span class="text-required">@T("Admin.ExportFeeed.SettingsCsv.CsvSeparatorCustom")</span>
                                </div>
                                <div class="col-xs-12 col-md-4 relative flex middle-xs">
                                    @Html.TextBoxFor(x => x.CsvSeparatorCustom, new { @class = "form-control input-alt-mobile", required = "required", ng_model = "exportCategories.settings.csvSeparatorCustom", ng_init = "exportCategories.settings.CsvSeparatorCustom='" + Model.CsvSeparatorCustom + "'", validation_input_text = T("Admin.ExportFeeed.SettingsCsv.CsvSeparatorCustom") })
                                    <help-trigger class="ng-cloak help-trigger-icon-abs m-l-xs @(isMobile ? "p-l-sm" : "")" data-title="@T("Admin.ExportFeeed.SettingsCsv.CsvSeparatorCustom")">
                                        <div class="help-content">
                                            @T("Admin.ExportFeeed.SettingsCsv.CsvSeparatorCustomHelp")
                                        </div>
                                    </help-trigger>
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="row category-row @(isMobile ? "setting__form-group" : "")">
                                <div class="col-xs-12 col-md-2 @(isMobile ? "setting-label-wrap setting__label" : "")">
                                    <span class="text-required">@T("Admin.ExportCategories.Settings.CsvEncoding")</span>
                                </div>
                                <div class="col-xs-12 col-md-4">
                                    @*, ng_model = "exportCategories.csvEncoding"*@
                                    @Html.DropDownListFor(modelItem => Model.CsvEncoding, new SelectList(Model.CsvEnconingList, "Key", "Value"), new { @class = "form-control input-alt", ng_model = "exportCategories.settings.csvEncoding", ng_init = "exportCategories.settings.csvEncoding='" + Model.CsvEncoding + "'" })
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="row category-row @(isMobile ? "setting__form-group" : "")">
                                <div class="col-xs-12 col-md-2 @(isMobile ? "setting-label-wrap setting__label" : "")">
                                    <span class="text-required">@T("Admin.ExportFeeed.SettingsCsv.PropertySeparator")</span>
                                </div>
                                <div class="col-xs-12 col-md-4 relative flex middle-xs">
                                    @Html.TextBoxFor(x => x.PropertySeparator, new { @class = "form-control input-alt-mobile", required = "required", ng_model = "exportCategories.settings.propertySeparator", ng_init = "exportCategories.settings.propertySeparator='" + Model.PropertySeparator + "'", validation_input_text = T("Admin.ExportFeeed.SettingsCsv.PropertySeparator") })
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="row category-row @(isMobile ? "setting__form-group" : "")">
                                <div class="col-xs-12 col-md-2 @(isMobile ? "setting-label-wrap setting__label" : "")">
                                    <span class="text-required">@T("Admin.ExportFeeed.SettingsCsv.NameSameProductProperty")</span>
                                </div>
                                <div class="col-xs-12 col-md-4 relative flex middle-xs">
                                    @Html.TextBoxFor(x => x.NameSameProductProperty, new { @class = "form-control input-alt-mobile", required = "required", ng_model = "exportCategories.settings.nameSameProductProperty", ng_init = "exportCategories.settings.nameSameProductProperty='" + Model.NameSameProductProperty + "'", validation_input_text = T("Admin.ExportFeeed.SettingsCsv.NameSameProductProperty") })
                                </div>
                            </div>
                        </div>

                        <div>
                            <div class="row category-row @(isMobile ? "setting__form-group" : "")">
                                <div class="col-xs-12 col-md-2 @(isMobile ? "setting-label-wrap setting__label" : "")">
                                    <span class="text-required">@T("Admin.ExportFeeed.SettingsCsv.NameNotSameProductProperty")</span>
                                </div>
                                <div class="col-xs-12 col-md-4 relative flex middle-xs">
                                    @Html.TextBoxFor(x => x.NameNotSameProductProperty, new { @class = "form-control input-alt-mobile", required = "required", ng_model = "exportCategories.settings.nameNotSameProductProperty", ng_init = "exportCategories.settings.nameNotSameProductProperty='" + Model.NameNotSameProductProperty + "'", validation_input_text = T("Admin.ExportFeeed.SettingsCsv.NameNotSameProductProperty") })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-2">
                <h2 class="category-title setting__subtitle setting--m-t-none">@T("Admin.ExportCategories.Settings.ExportFields")</h2>
                <div class="@(isMobile ? "setting-label-wrap setting__label" : "")">
                    @T("Admin.ExportCategories.Settings.ExportFieldsNote")
                </div>
            </div>
            <div class="col-xs-12 col-md-10">
                <div class="ibox category-block">
                    <div class="ibox-content category-content border_none">
                        <div>
                            <div class="row category-row">
                                <div class="col-xs-12 col-md-8">
                                    @{
                                        int index = 0;
                                        int i = 0;
                                    }
                                    @foreach (var item in Model.AllFields.Where(item => item.Key != AdvantShop.ExportImport.CategoryFields.None.ToString()))
                                    {
                                        <div class="form-group @(isMobile ? "flex" : "row")">
                                            <div class="@(isMobile ? "align-center index-width" : "col-xs-1")" style="@(isMobile ? "width:20px;" : "")">
                                                @Html.Raw(index + 1)
                                            </div>
                                            <div class="@(isMobile ? "col-xs" : "col-xs-10")">
                                                <div class="setting-label-wrap setting--m-none">
                                                    @{
                                                        if (i < Model.FieldMapping.Count && Model.AllFields.ContainsKey(Model.FieldMapping[i].ToString()))
                                                        {
                                                            @Html.DropDownList(index + "ddl", new SelectList(Model.AllFields, "Key", "Value", Model.FieldMapping[i].ToString()),
                                                                new { @class = "form-control input-alt", ng_init = "exportCategories.settings.exportCategoriesFields[" + index + "]='" + Model.FieldMapping[i].ToString() + "'", ng_model = "exportCategories.settings.exportCategoriesFields[" + index + "]" })
                                                            i++;
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList(index + "ddl", new SelectList(Model.AllFields, "Key", "Value"),
                                                                new { @class = "form-control input-alt", ng_init = "exportCategories.settings.exportCategoriesFields[" + index + "]='" + Model.AllFields.ElementAt(0).Key + "'", ng_model = "exportCategories.settings.exportCategoriesFields[" + index + "]" })
                                                        }
                                                        index++;
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }

                                </div>
                                @if (!isMobile)
                                {
                                    <div class="col-xs-12 col-md-4">
                                        <button type="submit" class="btn btn-sm m-b-sm m-r-sm btn-default" data-e2e="ExportSetNone" ng-click="exportCategories.setNoneExportCategoriesFields()">@T("Admin.ExportCategories.SetNoneExportFields")</button>
                                        <button type="submit" class="btn btn-sm m-b-sm btn-default" data-e2e="ExportSetDefault" ng-click="exportCategories.setDefaultExportCategoriesFields()">@T("Admin.ExportCategories.SetDefaultExportFields")</button>
                                    </div>
                                }
                            </div>
                            @if (!isMobile)
                            {
                                <div class="row">
                                    <div class="col-xs-12">

                                        <button class="btn btn-sm btn-success" data-e2e="Export" type="button" ng-click="exportCategories.startExport()">
                                            @T("Admin.ExportFeeed.ChoiceOfProducts.Export")
                                        </button>

                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>