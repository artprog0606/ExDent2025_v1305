@model AdvantShop.Web.Admin.Models.Orders.OrdersEdit.OrderModel
@{
    var rnd = new Random().NextDouble();
    var orderCustomer = Model.IsEditMode && Model.Order != null
        ? Model.Order.OrderCustomer
        : null;

    var customerFullName = orderCustomer != null ? ((Customer)orderCustomer).GetFullName() : string.Empty;
    var contact = orderCustomer != null ? ((Customer)orderCustomer).Contacts.FirstOrDefault() : null;
    var address = contact != null ? CustomerService.ConvertToLinedAddress(contact) : string.Empty;

    var hasCustomFields = orderCustomer != null && new List<string> { orderCustomer.CustomField1, orderCustomer.CustomField2, orderCustomer.CustomField3 }.Any(x => x.IsNotEmpty());

    var orderRecipient = Model.IsEditMode && Model.Order != null
            ? Model.Order.OrderRecipient
            : null;
    var recipientFullName = orderRecipient != null ? orderRecipient.FullName : null;
    var recipientPhone = orderRecipient != null ? orderRecipient.Phone : null;

    var orderReview = Model.IsEditMode && Model.Order != null
    ? Model.Order.OrderReview
    : null;
}
@if (Model.IsEditMode && Model.Order != null && !Model.Order.IsDraft)
{
    <div class="order-info">
        <div class="order-info__title">
            @T("Admin.Orders.OrderInfo.Contacts")
        </div>
        <div class="row between-xs m-b-sm">
            <div class="col-xs-slim order-info__col">
                @if (Model.Customer != null)
                {
                    <a href="@Url.AbsoluteActionUrl("View", "Customers", new {id = Model.Customer.Id})" class="order-info__text">
                        @customerFullName
                    </a>
                }
                else
                {
                    <span class="order-info__text">@customerFullName</span>
                }
            </div>
            <div class="col-xs-slim order-info__col order-info__col--text-right">
                <ui-modal-trigger data-controller="'ModalChangeOrderCustomerCtrl'" data-controller-as="ctrl" size="xs-11" window-class="modal--panel modal--bg" opened-class="modal-open--panel"
                                  data-resolve="{ params: { orderId: @(Model.OrderId) }}"
                                  data-on-close="order.editCustomerClose()"
                                  template-url="@("orders/popupOrderCustomer?orderid=" + Model.OrderId + "&rnd=" + rnd)">
                    <a href="" class="order-info__text" data-e2e="ChangeCustomer">
                        Изменить
                    </a>
                </ui-modal-trigger>
            </div>
        </div>

        @if (orderCustomer != null)
        {

            if (orderCustomer.Email.IsNotEmpty())
            {
                <div class="order-info__row order-info__row--full order-info__row--m-b-xs">
                    <div class="order-info__text">@orderCustomer.Email</div>
                </div>
            }
            if (orderCustomer.Phone.IsNotEmpty())
            {

                <div class="order-info__row order-info__row--full">
                    <div class="order-info__text">@orderCustomer.Phone</div>
                </div>
            }

            <div class="order-info__contacts">
                @if (orderCustomer.Email.IsNotEmpty())
                {
                    <div class="card card--icon order-info__contacts-item">
                        <ui-modal-trigger data-controller="'ModalSendLetterToCustomerCtrl'"
                                          controller-as="ctrl" size="lg"
                                          class="card__inner"
                                          template-url="@Html.GetAssetPath("sendLetterToCustomer.html")"
                                          data-on-close="order.updateLeadEventsWithDelay()"
                                          data-resolve="{params: {customerId: '@orderCustomer.CustomerID', email: '@orderCustomer.Email', firstName: '@orderCustomer.FirstName', lastName: '@orderCustomer.LastName', patronymic: '@orderCustomer.Patronymic', pageType: 'order'}}">
                            @Html.SvgSprite("email", "", new { width = 22, height = 22 })
                        </ui-modal-trigger>
                    </div>
                }

                @if (orderCustomer.Phone.IsNotEmpty() && orderCustomer.StandardPhone != null && orderCustomer.StandardPhone.Value != 0)
                {
                    <div class="card card--icon order-info__contacts-item">
                        <a href="tel:+@orderCustomer.StandardPhone" data-e2e="CustomerTel" title="Позвонить"
                           class="card__inner"
                           onclick="return advTrack('@AdvantShop.Track.ETrackEvent.Core_Orders_CallCustomer.ToString()');">
                            @Html.SvgSprite("phone", "", new { width = 22, height = 22 })
                        </a>
                    </div>
                    <div class="card card--icon order-info__contacts-item">
                        <ui-modal-trigger data-controller="'ModalSendSmsAdvCtrl'" controller-as="ctrl"
                                          class="card__inner"
                                          data-resolve="{params: { customerId: '@orderCustomer.CustomerID', phone: order.standardPhone, orderId: '@Model.OrderId', pageType: 'order'}}"
                                          template-url="@Html.GetAssetPath("sendSms.html")">
                            @Html.SvgSprite("chat", "", new { width = 22, height = 22 })
                        </ui-modal-trigger>
                    </div>
                    <div class="card card--icon order-info__contacts-item" ng-init="order.ShowViberDesktopAppNotification = @Model.ShowViberDesktopAppNotification.ToLowerString()">
                        <ui-modal-trigger class="ng-cloak"
                                          class="card__inner"
                                          ng-if="order.ShowViberDesktopAppNotification"
                                          data-controller="'OrderModalDesktopAppNotificationCtrl'" data-controller-as="ctrl"
                                          data-resolve="{ params: { appName: 'Viber', link: 'https://viber.click/@orderCustomer.StandardPhone' }}"
                                          data-on-close="order.ShowViberDesktopAppNotification = result"
                                          template-url="@Html.GetAssetPath("desktopAppNotificationOrder.html")">
                            @Html.SvgSprite("viber", "", new { width = 22, height = 22 })
                        </ui-modal-trigger>
                        <a ng-if="!order.ShowViberDesktopAppNotification" class="card__inner" href="https://viber.click/@orderCustomer.StandardPhone" target="_blank" data-e2e="ViberLink" title="Viber">
                            @Html.SvgSprite("viber", "", new { width = 22, height = 22 })
                        </a>
                    </div>
                    <div class="card card--icon order-info__contacts-item" ng-init="order.ShowWhatsAppDesktopAppNotification = @Model.ShowWhatsAppDesktopAppNotification.ToLowerString()">
                        <ui-modal-trigger class="ng-cloak card__inner"
                                          ng-if="order.ShowWhatsAppDesktopAppNotification"
                                          data-controller="'OrderModalDesktopAppNotificationCtrl'" data-controller-as="ctrl"
                                          data-resolve="{ params: { appName: 'WhatsApp', link: 'https://wa.me/@orderCustomer.StandardPhone' }}"
                                          data-on-close="order.ShowWhatsAppDesktopAppNotification = result"
                                          template-url="@Html.GetAssetPath("desktopAppNotificationOrder.html")">
                            @Html.SvgSprite("whatsapp", "", new { width = 22, height = 22 })
                        </ui-modal-trigger>
                        <a ng-if="order.ShowWhatsAppDesktopAppNotification === false" class="card__inner" href="https://wa.me/@orderCustomer.StandardPhone" target="_blank" data-e2e="WhatsAppLink" title="WhatsApp">
                            @Html.SvgSprite("whatsapp", "", new { width = 22, height = 22 })
                        </a>
                    </div>
                    
                    <div class="card card--icon order-info__contacts-item" ng-init="order.ShowTelegramDesktopAppNotification = @Model.ShowTelegramDesktopAppNotification.ToLowerString()">
                        <ui-modal-trigger class="ng-cloak card__inner"
                                          ng-if="order.ShowTelegramDesktopAppNotification"
                                          data-controller="'OrderModalDesktopAppNotificationCtrl'" data-controller-as="ctrl"
                                          data-resolve="{ params: { appName: 'telegram', link: 'https://t.me/+@orderCustomer.StandardPhone' }}"
                                          data-on-close="order.ShowTelegramDesktopAppNotification = result"
                                          template-url="@Html.GetAssetPath("desktopAppNotificationOrder.html")">
                            @Html.SvgSprite("telegram", "order-info__telegram telegram-icon", new { width = 22, height = 22 })
                        </ui-modal-trigger>
                        <a ng-if="order.ShowTelegramDesktopAppNotification === false" class="card__inner" href="https://t.me/+@orderCustomer.StandardPhone" target="_blank" data-e2e="TelegramLink" title="Telegram">
                            @Html.SvgSprite("telegram", "order-info__telegram telegram-icon", new { width = 22, height = 22 })
                        </a>
                    </div>
                    
                    @Html.RenderModules("admin_order_customer_info", new { orderCustomer = orderCustomer })
                }
            </div>
            @*Для окна доставки*@
            @Html.HiddenFor(x => x.Order.OrderCustomer.Country, new Dictionary<string, object>() { { "ng-model", "order.country" } })
            @Html.HiddenFor(x => x.Order.OrderCustomer.Region, new Dictionary<string, object>() { { "ng-model", "order.region" } })
            @Html.HiddenFor(x => x.Order.OrderCustomer.City, new Dictionary<string, object>() { { "ng-model", "order.city" } })
            @Html.HiddenFor(x => x.Order.OrderCustomer.Zip, new Dictionary<string, object>() { { "ng-model", "order.zip" } })

        }

        <div class="order-info__title">
            @T("Admin.Orders.OrderInfo.OrderRecipient")
        </div>

        <div class="row between-xs m-b-sm" ng-init="order.RecipientFullName = '@recipientFullName';order.RecipientPhone = '@recipientPhone'">
            <div class="col-xs-slim order-info__col">
                <div ng-if="order.RecipientFullName" class="order-info__row order-info__row--full order-info__row--{{order.RecipientPhone ? 'm-b-xs' : 'm-b-xm'}}">
                    <div class="order-info__text" ng-bind="order.RecipientFullName">@recipientFullName</div>
                </div>
                <div ng-if="order.RecipientPhone" class="order-info__row order-info__row--full order-info__row--m-b-xm">
                    <div class="order-info__text" ng-bind="order.RecipientPhone">@recipientPhone</div>
                </div>
            </div>
            <div class="col-xs-slim order-info__col order-info__col--text-right">
                <ui-modal-trigger data-controller="'ModalChangeOrderRecipientCtrl'" data-controller-as="ctrl" size="xs"
                                  data-resolve="{ params: { orderId: @(Model.OrderId) }}"
                                  data-on-close="order.updateOrderRecipient(result)"
                                  template-url="@Html.GetAssetPath("changeOrderRecipient.html")">
                    <a href="" class="order-info__text" data-e2e="ChangeRecipient">
                        Изменить
                    </a>
                </ui-modal-trigger>
            </div>
        </div>

            <div class="order-info__address">
                <div class="clear">
                    <div class="order-info__title pull-left">@T("Admin.Mobile.Order.DeliveryAddress")</div>
                    <div class="pull-right">
                        <ui-modal-trigger data-controller="'ModalChangeOrderCustomerAddressCtrl'" data-controller-as="ctrl" size="xs-11" window-class="modal--panel modal--bg" opened-class="modal-open--panel"
                                          data-animation="false"
                                          data-resolve="{ params: { orderId: @(Model.OrderId) }}"
                                          data-on-close="order.editCustomerClose()"
                                          template-url="@("orders/popupOrderCustomerAddress?orderid=" + Model.OrderId + "&rnd=" + rnd)">
                            <a href="" class="order-info__text" data-e2e="ChangeCustomerAddress">
                                Изменить
                            </a>
                        </ui-modal-trigger>
                    </div>
                </div>
                @if (address.IsNotEmpty())
                {
                    <div class="order-info__address-inner">
                        <div class="order-info__text" data-e2e="CustomerAdress">
                            @address
                        </div>
                        <a class="card card--icon order-info__address-map-btn" href="//maps.yandex.ru/?text=@address" data-e2e="CustomerAdressMap" target="_blank">
                            <svg width="18" height="24" viewBox="0 0 18 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9 0C4.32 0 .6 3.72.6 8.4.6 14.64 9 24 9 24s8.4-9.36 8.4-15.6C17.4 3.72 13.68 0 9 0zm0 11.4c-1.68 0-3-1.32-3-3s1.32-3 3-3 3 1.32 3 3-1.32 3-3 3z" fill="#BE52F2" />
                            </svg>
                        </a>
                    </div>
                }else{
                    <span>@T("Admin.Order.Address.NotExist")</span>
                }
            </div>
            @if (hasCustomFields)
            {
                if (orderCustomer.CustomField1.IsNotEmpty())
                {
                    <div class="order-info__row">
                        <span class="order-info__text order-info__text--alt">@SettingsCheckout.CustomShippingField1:</span>
                        <span class="order-info__text">@orderCustomer.CustomField1</span>
                    </div>
                }
                if (orderCustomer.CustomField2.IsNotEmpty())
                {
                    <div class="order-info__row">
                        <span class="order-info__text order-info__text--alt">@SettingsCheckout.CustomShippingField2:</span>
                        <span class="order-info__text">@orderCustomer.CustomField2</span>
                    </div>
                }
                if (orderCustomer.CustomField3.IsNotEmpty())
                {
                    <div class="order-info__row">
                        <span class="order-info__text order-info__text--alt">@SettingsCheckout.CustomShippingField3:</span>
                        <span class="order-info__text">@orderCustomer.CustomField3</span>
                    </div>
                }

            }

        @if (orderReview != null)
        {
            <div class="order-info__title">
                @T("Admin.Orders.OrderInfo.OrderReview")
            </div>
            <ul class="rating"
                rating
                readonly="true"
                current="@orderReview.Ratio.ToString()">
                @for (var i = 5; i > 0; --i)
                {
                    <li class="rating-item"
                        ng-class="{'rating-item-selected': @i <= rating.current}">
                        <svg width="25" height="25" class="rating__star" xmlns="http://www.w3.org/2000/svg" viewBox="3 0 22 22">
                            <path fill="currentColor" d="M19.392 9.202c0-.248-.188-.403-.565-.463l-5.061-.736-2.268-4.588c-.128-.275-.293-.413-.494-.413-.202 0-.367.138-.495.413L8.241 8.003l-5.061.736c-.377.06-.565.215-.565.463 0 .142.084.303.252.484l3.67 3.57-.867 5.04c-.014.095-.02.162-.02.202 0 .141.035.26.105.358.07.098.177.146.318.146.12 0 .255-.04.403-.12l4.527-2.38 4.527 2.38c.141.08.276.12.403.12a.355.355 0 0 0 .308-.146.595.595 0 0 0 .106-.358 1.51 1.51 0 0 0-.01-.201l-.868-5.042 3.66-3.569c.175-.174.262-.336.262-.484" />
                        </svg>
                    </li>
                }
            </ul>

            if (orderReview.Text.IsNotEmpty())
            {
                <div class="order-info__row order-info__row--full order-info__row--m-b-xm m-t-sm">
                    <div class="order-info__text order-info__text-review">@orderReview.Text</div>
                </div>
            }
        }

    </div>

}
