@using AdvantShop.Design
@using AdvantShop.Web.Admin.Handlers.Store
@using AdvantShop.Trial
@using AdvantShop.Core.Services.Admin
@using AdvantShop.DownloadableContent;
@using AdvantShop.Core.Services.Domains;
@model AdvantShop.Web.Admin.ViewModels.Design.DesignModel
@{
    Layout = "~/Areas/Admin/Templates/Mobile/Views/Store/_StoreLayout.cshtml";
    var isMobile = SettingsDesign.IsMobileTemplate;
    var template = Model.CurrentTemplate;
    var page = new GetStorePage().Execute();
}
@{
    Html.AddAsset("design");
}

@helper RenderTableTemplates(List<DownloadableContentObject> items)
{
    if (items != null && items.Any())
    {
        <div class="">
            <table class="tpl-table">
                <tr>
                    <th class="tpl-table__th">
                        @T("Admin.Design.Index.Name")
                    </th>
                    <th class="tpl-table__th">
                        @T("Admin.Design.Index.Price")
                    </th>
                    <th class="tpl-table__th">

                    </th>
                    <th class="tpl-table__th">

                    </th>
                </tr>
                @foreach (var tpl in items)
                {

                    <tr ng-class="{'progress-overlay': design.templatesProgress['@(tpl.StringId)']}">
                        <td class="tpl-table__td">
                            @*@if (tpl.DetailsLink.IsNotEmpty())
                            {
                                <a href="@tpl.DetailsLink" target="_blank" class="link-invert text-decoration-invert">@tpl.Name</a>
                            }
                            else
                            {
                                <span>@tpl.Name</span>
                            }*@
                            <span>@tpl.Name</span>
                        </td>
                        <td class="tpl-table__td">
                            @Html.Raw(tpl.Price > 0 ? tpl.Price + " " + tpl.Currency : T("Admin.Design.Index.Free").ToString())
                        </td>
                        <td class="tpl-table__td">
                            @using (Html.BeginAbsoluteUrlForm("ApplyTemplate", "Design", FormMethod.Post, new { @class = "inline" }))
                            {
                                @Html.Hidden("templateId", tpl.StringId)
                                <input type="submit" class="btn btn-sm btn-info btn-outline" value="@T("Admin.Design.Index.Apply")" />
                            }
                        </td>
                        <td class="tpl-table__td">
                            @{
                                var moreButtonModel = new MoreButtonModel();
                                moreButtonModel.ColorType = eColorType.Secondary;
                                moreButtonModel.Size = eButtonSize.Default;
                                moreButtonModel.NgTemplateId = "templateListItemMore_" + tpl.StringId;
                                moreButtonModel.Text = T("Больше");
                                moreButtonModel.Icon = new ButtonIcon()
                                {
                                    SvgName = "more",
                                    Attributes = new { width = 24, height = 24 }
                                };
                                moreButtonModel.Modificators = new List<eButtonModificators> {
                                                eButtonModificators.OnlyIcon
                                            };
                                moreButtonModel.Items = new List<MoreButtonPopoverItem>();

                                if (tpl.DetailsLink.IsNotEmpty())
                                {
                                    moreButtonModel.Items.Add(new MoreButtonPopoverItem()
                                    {
                                        Link = tpl.DetailsLink,
                                        ColorType = eColorType.Link,
                                        Modificators = new List<eButtonModificators>()
                                                                                                                                            {
                                                    eButtonModificators.HorizontalPaddingZero
                                                },
                                        Text = T("Online demo"),
                                        Attributes = new string[] { "target=\"_blank\"" },
                                        Icon = new ButtonIcon()
                                        {
                                            SvgName = "go",
                                            Attributes = new { width = 20, height = 20 }
                                        }
                                    });
                                }
                                if (!string.Equals(tpl.CurrentVersion, tpl.Version) && !tpl.IsLocalVersion && !tpl.IsCustomVersion)
                                {
                                    moreButtonModel.Items.Add(new MoreButtonPopoverItem()
                                    {
                                        Type = eButtonType.Save,
                                        ColorType = eColorType.Link,
                                        Modificators = new List<eButtonModificators>()
                                                                                                                                            {
                                                    eButtonModificators.HorizontalPaddingZero
                                                },
                                        Text = T("Admin.Design.Index.UpdateTemplate"),
                                        Icon = new ButtonIcon()
                                        {
                                            SvgName = "refresh",
                                            Attributes = new { width = 20, height = 20 }
                                        },
                                        WrapStart = String.Format("<form method=\"post\" class=\"inline\" action=\"{0}\"><input type=\"hidden\" name=\"id\" value=\"{1}\"><input type=\"hidden\" name=\"stringId\" value=\"{2}\">", Url.AbsoluteActionUrl("UpdateTemplate", "Design"), tpl.Id, tpl.StringId),
                                        WrapEnd = "</form>"
                                    });
                                }
                                if (!tpl.IsCustomVersion && tpl.StringId != "_default")
                                {
                                    moreButtonModel.Items.Add(new MoreButtonPopoverItem()
                                    {
                                        Type = eButtonType.Link,
                                        ColorType = eColorType.Danger,
                                        Modificators = new List<eButtonModificators>()
                                                                                                                                            {
                                                    eButtonModificators.HorizontalPaddingZero
                                                },
                                        Text = T("Admin.Design.Index.DeleteTemplate"),
                                        Attributes = new string[] { "ng-click=\"design.deleteTemplate('" + tpl.StringId + "')\"" },
                                        Icon = new ButtonIcon()
                                        {
                                            SvgName = "remove",
                                            Attributes = new { width = 24, height = 24 }
                                        },
                                        WrapStart = String.Format("<form method=\"post\"  action=\"{0}\"><input type=\"hidden\" name=\"id\" value=\"{1}\"><input type=\"hidden\" name=\"stringId\" value=\"{2}\">", Url.AbsoluteActionUrl("DeleteTemplate", "Design"), tpl.Id, tpl.StringId),
                                        WrapEnd = "</form>"
                                    });
                                }
                            }

                            @if (tpl.StringId != "_default")
                            {
                                @Html.MoreButton(moreButtonModel)
                            }
                        </td>
                    </tr>
                }

            </table>
        </div>
    }
}

@{
    var headerModel = new AdvantShop.Web.Admin.ViewModels.Shared.Common.HeaderViewModel();
    headerModel.Back = new AdvantShop.Web.Admin.ViewModels.Shared.Common.BackViewModel()
    {
        Url = Url.AbsoluteActionUrl("index", "Design", new {showCommon = true })
    };

    headerModel.Title = T("Admin.Design.Index.DesignTemplate").ToString();
}

@Html.Header(headerModel)

<div class="m-b-sm">
    <a href="https://www.advantshop.net/help/pages/shablony-dizaina" target="_blank" class="link-academy link-invert inline-flex middle-xs">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve" width="18" height="18" fill="#989a9b" class="m-r-xs">
        <path d="M20.005,512c-5.097,0-10.116-1.948-13.925-5.641c-5.845-5.666-7.672-14.309-4.621-21.855l45.411-112.333  C16.162,332.253,0,285.425,0,236c0-63.375,26.855-122.857,75.62-167.489C123.891,24.331,187.952,0,256,0  s132.109,24.331,180.38,68.511C485.145,113.143,512,172.625,512,236c0,45.448-14.04,89.577-40.602,127.615  c-6.325,9.057-18.792,11.271-27.849,4.947s-11.271-18.792-4.947-27.849C460.452,309.425,472,273.215,472,236  c0-108.075-96.897-196-216-196S40,127.925,40,236c0,43.783,15.577,85.2,45.046,119.773c4.834,5.671,6.115,13.561,3.321,20.47  l-31.366,77.589l91.345-40.266c5.063-2.231,10.826-2.267,15.916-0.095C193.082,425.766,223.946,432,256,432  c36.892,0,73.299-8.587,105.286-24.832c9.85-5,21.887-1.072,26.889,8.775c5.001,9.849,1.073,21.887-8.775,26.889  C341.828,461.914,299.157,472,256,472c-34.48,0-67.835-6.191-99.276-18.413L28.068,510.301C25.474,511.444,22.728,512,20.005,512z   M276,325V217c0-11.046-8.954-20-20-20s-20,8.954-20,20v108c0,11.046,8.954,20,20,20S276,336.046,276,325z M256,128  c-11.046,0-20,8.954-20,20l0,0c0,11.046,8.954,20,20,20s20-8.954,20-20l0,0C276,136.954,267.046,128,256,128z"></path>
        </svg>
        <span>@T("Admin.Design.Index.InstructionsSample")</span>
    </a>
</div>

<div class="design-form-title">
    @T("Admin.Design.Index.CurrentTemplate")
</div>

<div class="card card--form-control">
    <div class="card__label">@T("Admin.Design.Index.TemplateName")</div>
    <div class="row between-xs middle-xs">
        <div class="col-xs">
            @template.Name
        </div>
        @if (template.Version != template.CurrentVersion && !template.IsLocalVersion && !template.IsCustomVersion)
        {
            <div class="col-xs-slim">
                @using (Html.BeginAbsoluteUrlForm("UpdateTemplate", "Design", FormMethod.Post, new { @class = "inline" }))
                {
                    @Html.Hidden("id", template.Id)
                    @Html.Hidden("stringId", template.StringId)
                    @Html.Button(T("Обновить шаблон"), type: eButtonType.Save, colorType: eColorType.Link,
                                   modificators: new List<eButtonModificators>() { eButtonModificators.OnlyIcon },
                                   icon: new ButtonIcon() { SvgName = "refresh", Attributes = new { width = 20, height = 20 } })
                }
            </div>
        }
    </div>
</div>



<div class="m-t-md m-b-md">

    @if (!Model.AvaliableTemplates.Any())
    {
        <div class="design-form-title">@T("Admin.Design.Index.NoInstalledTemplates")</div>
    }
    else if (TrialService.IsTrialEnabled)
    {
        <div class="design-form-title">
            @T("Admin.Design.Index.PaidTemplates")
        </div>
    }
    else
    {
        <div class="design-form-title">
            @T("Admin.Design.Index.InstalledTemplates")
        </div>
    }


    @if (Model.AvaliableTemplates != null && Model.AvaliableTemplates.Any())
    {
        var count = Model.AvaliableTemplates.Count;

        if (count > 5 && !isMobile)
        {
            var columnOne = Model.AvaliableTemplates.Take((count + 1) / 2).ToList();
            var columnTwo = Model.AvaliableTemplates.Skip((count + 1) / 2).ToList();
            <div class="row">
                <div class="col-xs-slim">
                    <div class="p-r-lg">
                        @RenderTableTemplates(columnOne)
                    </div>
                </div>
                <div class="col-xs-slim">
                    @RenderTableTemplates(columnTwo)
                </div>
            </div>
        }
        else
        {
            @RenderTableTemplates(Model.AvaliableTemplates)
        }
    }
</div>

<article class="design-templateshop m-b">
    @Html.Button(T("Admin.Design.Index.GoTemplateShop"), eButtonType.Simple, eButtonSize.Small, eColorType.Success, Url.AbsoluteActionUrl("CreateSite", "Dashboard", new { mode = "store" }), modificators: new List<eButtonModificators>() { eButtonModificators.FullWidth })
</article>



@*@if (DomainService.IsAvalable())
    {
          <a href="@Url.AbsoluteActionUrl("Domains", "Store")" class="btn btn-sm btn-success btn-success--inverse">Привязать домен</a>
    }*@
