@using AdvantShop.Core.Services.Landing.Pictures;
@model BlockModel
@{
    var items = Model.Block.TryGetSettingAsListValueble<GalleryItemModel, string>("items");
}

<div class="container-fluid partners-logo-carousel-block">
    <div class="lp-container">
        <div class="text-center">
            @Html.BlockHeader(Model)
        </div>
        @if (items != null)
        {
            var itemsCount = LpService.PreviewInAdmin ? Math.Min(items.Count, 6) : items.Count;

            <div class="container-fluid">
                <div class="slick-slider partners-logo-carousel__carousel-wrap">
                    <div @Html.Raw(Model.Inplace ? "lozad-adv=\"blocksConstructorContainer.getData()\"" : "")>
                        <slick class="ng-cloak partners-logo-carousel__carousel @(LpService.PreviewInAdmin ? "partners-logo-carousel--preview-admin" : "")" settings="@Model.Block.TryGetSetting("carouselOptions")">
                            @for (var i = 0; i < itemsCount; i++)
                            {
                            <div class="partners-logo-carousel__item">
                                @if (items[i].Link != string.Empty && items[i].Link != null)
                                {
                                    <a href="@items[i].Link">
                                        @Html.PictureLoaderTrigger(new PictureLoaderTriggerModel()
                                   {
                                       LandingPageId = Model.Block.LandingId,
                                       BlockId = Model.Block.Id,
                                       OnApply = "blocksConstructorContainer.onApplyPicture(blocksConstructorContainer.data.Settings.items, result," + i + ")",
                                       OnDelete = "blocksConstructorContainer.onDeletePicture(blocksConstructorContainer.data.Settings.items, " + i + ")",
                                       OnResize = "blocksConstructorContainer.onResizePicture(blocksConstructorContainer.data.Settings.items, result, " + i + ")",
                                       OnLazyLoadChange = "blocksConstructorContainer.onLazyLoadChange(blocksConstructorContainer.data, result," + i + ")",
                                       Parameters = "[{maxHeight: 80,postfix: 'preview'}]",
                                       Current = items[i].Picture.Src,
                                       MaxHeight = 80,
                                       GalleryIconsEnabled = false,
                                       LazyLoadEnabled = items[i].Picture.LazyLoadEnabled,
                                       LazyLoadType = ePictureLoaderLazyLoadType.Carousel,
                                       MaxWidthPicture = 180,
                                       MaxHeightPicture = 180,
                                       WidthPicture = items[i].Picture.Width,
                                       HeightPicture = items[i].Picture.Height
                                   })
                                    </a>
                                }
                                else
                                {
                                    @Html.PictureLoaderTrigger(new PictureLoaderTriggerModel()
                                {
                                    LandingPageId = Model.Block.LandingId,
                                    BlockId = Model.Block.Id,
                                    OnApply = "blocksConstructorContainer.onApplyPicture(blocksConstructorContainer.data.Settings.items, result," + i + ")",
                                    OnDelete = "blocksConstructorContainer.onDeletePicture(blocksConstructorContainer.data.Settings.items, " + i + ")",
                                    OnResize = "blocksConstructorContainer.onResizePicture(blocksConstructorContainer.data.Settings.items, result, " + i + ")",
                                    OnLazyLoadChange = "blocksConstructorContainer.onLazyLoadChange(blocksConstructorContainer.data, result," + i + ")",
                                    Parameters = "[{maxHeight: 80,postfix: 'preview'}]",
                                    Current = items[i].Picture.Src,
                                    MaxHeight = 80,
                                    GalleryIconsEnabled = false,
                                    LazyLoadEnabled = items[i].Picture.LazyLoadEnabled,
                                    LazyLoadType = ePictureLoaderLazyLoadType.Carousel,
                                    MaxWidthPicture = 180,
                                    MaxHeightPicture = 180,
                                    WidthPicture = items[i].Picture.Width,
                                    HeightPicture = items[i].Picture.Height
                                })
                                }

                            </div>
                            }
                        </slick>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
