@model BlockModel

@{
    var items = Model.Block.TryGetSettingAsList<ReviewModel>("items");
}

<div class="lp-area">
    <div class="container-fluid">
        <div class="lp-container">
            @if (Model.Block.TryGetSetting("show_title") == true)
            {
                <div class="row center-xs">
                    <div class="col-xs-12">
                        <div class="lp-h2 lp-h2--color reviews-columns-with-stars__title @(Model.Block.TryGetSetting("show_subtitle") == true ? "" : "reviews-columns-with-stars__title--margin-big")">@Html.SubBlock(Model, "title")</div>
                    </div>
                </div>
            }
            @if (Model.Block.TryGetSetting("show_subtitle") == true)
            {
                <div class="row center-xs">
                    <div class="col-xs-12">
                        <div class="reviews-addition-text reviews-columns-with-stars__subtitle lp-h3 lp-h3--color">
                            @Html.SubBlock(Model, "subtitle")
                        </div>
                    </div>
                </div>
            }
            @if (items != null)
            {
                <div class="row" @Html.Raw(Model.Inplace ? "lozad-adv=\"blocksConstructorContainer.getData()\"" : "")>

                    @for (var i = 0; i < items.Count(); i++)
                    {
                        <div class="col-xs-12 col-sm-4">
                            <div class="reviews-columns-with-stars__item">

                                <div class="reviews-columns-with-stars__author" @Html.InplaceSettings(Model.Block.Id, "blocksConstructorContainer.data", "items[" + i + "].author")>
                                    @Html.Raw(items[i].Author)
                                </div>

                                <div class="reviews-columns-with-stars__rating rating">
                                    @if (items[i] != null)
                                    {
                                        @Html.Action("Rating", new {ratio = items[i].Rating, readOnly = true})
                                    }

                                </div>

                                <div class="reviews-columns-with-stars__text lp-h3">
                                    <div class="block" @Html.InplaceSettings(Model.Block.Id, "blocksConstructorContainer.data", "items[" + i + "].text")>
                                        @Html.Raw(items[i].Text)
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>